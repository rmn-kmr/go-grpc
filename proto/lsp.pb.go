// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: proto/lsp.proto

package lsp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Provider int32

const (
	Provider_UNKNOWN  Provider = 0
	Provider_STASHFIN Provider = 1
)

// Enum value maps for Provider.
var (
	Provider_name = map[int32]string{
		0: "UNKNOWN",
		1: "STASHFIN",
	}
	Provider_value = map[string]int32{
		"UNKNOWN":  0,
		"STASHFIN": 1,
	}
)

func (x Provider) Enum() *Provider {
	p := new(Provider)
	*p = x
	return p
}

func (x Provider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Provider) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lsp_proto_enumTypes[0].Descriptor()
}

func (Provider) Type() protoreflect.EnumType {
	return &file_proto_lsp_proto_enumTypes[0]
}

func (x Provider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Provider.Descriptor instead.
func (Provider) EnumDescriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{0}
}

// ENUM's
type LoanStatus int32

const (
	LoanStatus_PENDING   LoanStatus = 0
	LoanStatus_FAILED    LoanStatus = 1
	LoanStatus_DISBURSED LoanStatus = 2
	LoanStatus_APPROVED  LoanStatus = 3
	LoanStatus_REJECTED  LoanStatus = 4
)

// Enum value maps for LoanStatus.
var (
	LoanStatus_name = map[int32]string{
		0: "PENDING",
		1: "FAILED",
		2: "DISBURSED",
		3: "APPROVED",
		4: "REJECTED",
	}
	LoanStatus_value = map[string]int32{
		"PENDING":   0,
		"FAILED":    1,
		"DISBURSED": 2,
		"APPROVED":  3,
		"REJECTED":  4,
	}
)

func (x LoanStatus) Enum() *LoanStatus {
	p := new(LoanStatus)
	*p = x
	return p
}

func (x LoanStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoanStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lsp_proto_enumTypes[1].Descriptor()
}

func (LoanStatus) Type() protoreflect.EnumType {
	return &file_proto_lsp_proto_enumTypes[1]
}

func (x LoanStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoanStatus.Descriptor instead.
func (LoanStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{1}
}

type DocumentType int32

const (
	// kyc documents
	DocumentType_AADHAAR         DocumentType = 0
	DocumentType_SELFIE          DocumentType = 1
	DocumentType_PAN             DocumentType = 2
	DocumentType_SIGNATURE       DocumentType = 3
	DocumentType_DRIVING_LICENSE DocumentType = 4
	DocumentType_AADHAAR_ZIP     DocumentType = 5
	// Loan documents
	DocumentType_UNSIGNED_LOAN_AGREEMENT DocumentType = 6
	DocumentType_SIGNED_LOAN_AGREEMENT   DocumentType = 7
	DocumentType_KFS                     DocumentType = 8
	DocumentType_OKYC  DocumentType = 9
	DocumentType_OTHER DocumentType = 10
)

// Enum value maps for DocumentType.
var (
	DocumentType_name = map[int32]string{
		0:  "AADHAAR",
		1:  "SELFIE",
		2:  "PAN",
		3:  "SIGNATURE",
		4:  "DRIVING_LICENSE",
		5:  "AADHAAR_ZIP",
		6:  "UNSIGNED_LOAN_AGREEMENT",
		7:  "SIGNED_LOAN_AGREEMENT",
		8:  "KFS",
		9:  "OKYC",
		10: "OTHER",
	}
	DocumentType_value = map[string]int32{
		"AADHAAR":                 0,
		"SELFIE":                  1,
		"PAN":                     2,
		"SIGNATURE":               3,
		"DRIVING_LICENSE":         4,
		"AADHAAR_ZIP":             5,
		"UNSIGNED_LOAN_AGREEMENT": 6,
		"SIGNED_LOAN_AGREEMENT":   7,
		"KFS":                     8,
		"OKYC":                    9,
		"OTHER":                   10,
	}
)

func (x DocumentType) Enum() *DocumentType {
	p := new(DocumentType)
	*p = x
	return p
}

func (x DocumentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DocumentType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lsp_proto_enumTypes[2].Descriptor()
}

func (DocumentType) Type() protoreflect.EnumType {
	return &file_proto_lsp_proto_enumTypes[2]
}

func (x DocumentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DocumentType.Descriptor instead.
func (DocumentType) EnumDescriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{2}
}

type InstallmentFrequency int32

const (
	InstallmentFrequency_DAILY   InstallmentFrequency = 0
	InstallmentFrequency_WEEKLY  InstallmentFrequency = 1
	InstallmentFrequency_MONTHLY InstallmentFrequency = 2
)

// Enum value maps for InstallmentFrequency.
var (
	InstallmentFrequency_name = map[int32]string{
		0: "DAILY",
		1: "WEEKLY",
		2: "MONTHLY",
	}
	InstallmentFrequency_value = map[string]int32{
		"DAILY":   0,
		"WEEKLY":  1,
		"MONTHLY": 2,
	}
)

func (x InstallmentFrequency) Enum() *InstallmentFrequency {
	p := new(InstallmentFrequency)
	*p = x
	return p
}

func (x InstallmentFrequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstallmentFrequency) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lsp_proto_enumTypes[3].Descriptor()
}

func (InstallmentFrequency) Type() protoreflect.EnumType {
	return &file_proto_lsp_proto_enumTypes[3]
}

func (x InstallmentFrequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstallmentFrequency.Descriptor instead.
func (InstallmentFrequency) EnumDescriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{3}
}

type Gender int32

const (
	Gender_MALE   Gender = 0
	Gender_FEMALE Gender = 1
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "MALE",
		1: "FEMALE",
	}
	Gender_value = map[string]int32{
		"MALE":   0,
		"FEMALE": 1,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lsp_proto_enumTypes[4].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_proto_lsp_proto_enumTypes[4]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{4}
}

type RepaymentAllocationType int32

const (
	RepaymentAllocationType_INSTALLMENT RepaymentAllocationType = 0
	RepaymentAllocationType_PENALTY     RepaymentAllocationType = 1
)

// Enum value maps for RepaymentAllocationType.
var (
	RepaymentAllocationType_name = map[int32]string{
		0: "INSTALLMENT",
		1: "PENALTY",
	}
	RepaymentAllocationType_value = map[string]int32{
		"INSTALLMENT": 0,
		"PENALTY":     1,
	}
)

func (x RepaymentAllocationType) Enum() *RepaymentAllocationType {
	p := new(RepaymentAllocationType)
	*p = x
	return p
}

func (x RepaymentAllocationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepaymentAllocationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lsp_proto_enumTypes[5].Descriptor()
}

func (RepaymentAllocationType) Type() protoreflect.EnumType {
	return &file_proto_lsp_proto_enumTypes[5]
}

func (x RepaymentAllocationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepaymentAllocationType.Descriptor instead.
func (RepaymentAllocationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{5}
}

type UserBankDetails_AccountType int32

const (
	UserBankDetails_SAVINGS UserBankDetails_AccountType = 0
	UserBankDetails_CURRENT UserBankDetails_AccountType = 1
)

// Enum value maps for UserBankDetails_AccountType.
var (
	UserBankDetails_AccountType_name = map[int32]string{
		0: "SAVINGS",
		1: "CURRENT",
	}
	UserBankDetails_AccountType_value = map[string]int32{
		"SAVINGS": 0,
		"CURRENT": 1,
	}
)

func (x UserBankDetails_AccountType) Enum() *UserBankDetails_AccountType {
	p := new(UserBankDetails_AccountType)
	*p = x
	return p
}

func (x UserBankDetails_AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserBankDetails_AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lsp_proto_enumTypes[6].Descriptor()
}

func (UserBankDetails_AccountType) Type() protoreflect.EnumType {
	return &file_proto_lsp_proto_enumTypes[6]
}

func (x UserBankDetails_AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserBankDetails_AccountType.Descriptor instead.
func (UserBankDetails_AccountType) EnumDescriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{10, 0}
}

type CheckLoanStatusResponse_Status int32

const (
	CheckLoanStatusResponse_PENDING                CheckLoanStatusResponse_Status = 0
	CheckLoanStatusResponse_SUCCESS                CheckLoanStatusResponse_Status = 1
	CheckLoanStatusResponse_FAILED                 CheckLoanStatusResponse_Status = 2
	CheckLoanStatusResponse_INCOMPLETE_APPLICATION CheckLoanStatusResponse_Status = 3
	CheckLoanStatusResponse_UNDER_PROCESSING       CheckLoanStatusResponse_Status = 4
	CheckLoanStatusResponse_APPROVED               CheckLoanStatusResponse_Status = 5
	CheckLoanStatusResponse_ELIGIBLE               CheckLoanStatusResponse_Status = 6
	CheckLoanStatusResponse_REJECTED               CheckLoanStatusResponse_Status = 7
)

// Enum value maps for CheckLoanStatusResponse_Status.
var (
	CheckLoanStatusResponse_Status_name = map[int32]string{
		0: "PENDING",
		1: "SUCCESS",
		2: "FAILED",
		3: "INCOMPLETE_APPLICATION",
		4: "UNDER_PROCESSING",
		5: "APPROVED",
		6: "ELIGIBLE",
		7: "REJECTED",
	}
	CheckLoanStatusResponse_Status_value = map[string]int32{
		"PENDING":                0,
		"SUCCESS":                1,
		"FAILED":                 2,
		"INCOMPLETE_APPLICATION": 3,
		"UNDER_PROCESSING":       4,
		"APPROVED":               5,
		"ELIGIBLE":               6,
		"REJECTED":               7,
	}
)

func (x CheckLoanStatusResponse_Status) Enum() *CheckLoanStatusResponse_Status {
	p := new(CheckLoanStatusResponse_Status)
	*p = x
	return p
}

func (x CheckLoanStatusResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckLoanStatusResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lsp_proto_enumTypes[7].Descriptor()
}

func (CheckLoanStatusResponse_Status) Type() protoreflect.EnumType {
	return &file_proto_lsp_proto_enumTypes[7]
}

func (x CheckLoanStatusResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckLoanStatusResponse_Status.Descriptor instead.
func (CheckLoanStatusResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{16, 0}
}

type RequestMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdditionalFields string   `protobuf:"bytes,1,opt,name=additional_fields,json=additionalFields,proto3" json:"additional_fields,omitempty"`
	Provider         Provider `protobuf:"varint,2,opt,name=provider,proto3,enum=rmnkmr.lsp.v1.Provider" json:"provider,omitempty"`
}

func (x *RequestMetadata) Reset() {
	*x = RequestMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMetadata) ProtoMessage() {}

func (x *RequestMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMetadata.ProtoReflect.Descriptor instead.
func (*RequestMetadata) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{0}
}

func (x *RequestMetadata) GetAdditionalFields() string {
	if x != nil {
		return x.AdditionalFields
	}
	return ""
}

func (x *RequestMetadata) GetProvider() Provider {
	if x != nil {
		return x.Provider
	}
	return Provider_UNKNOWN
}

type LoanProvidersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoanProvidersRequest) Reset() {
	*x = LoanProvidersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProvidersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProvidersRequest) ProtoMessage() {}

func (x *LoanProvidersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProvidersRequest.ProtoReflect.Descriptor instead.
func (*LoanProvidersRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{1}
}

type ProviderConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProviderConfig) Reset() {
	*x = ProviderConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderConfig) ProtoMessage() {}

func (x *ProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderConfig.ProtoReflect.Descriptor instead.
func (*ProviderConfig) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{2}
}

type LoanProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider       string          `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProviderId     string          `protobuf:"bytes,2,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	ProviderName   string          `protobuf:"bytes,3,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	ProviderConfig *ProviderConfig `protobuf:"bytes,4,opt,name=provider_config,json=providerConfig,proto3" json:"provider_config,omitempty"`
	ProviderType   string          `protobuf:"bytes,5,opt,name=provider_type,json=providerType,proto3" json:"provider_type,omitempty"`
}

func (x *LoanProviderResponse) Reset() {
	*x = LoanProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProviderResponse) ProtoMessage() {}

func (x *LoanProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProviderResponse.ProtoReflect.Descriptor instead.
func (*LoanProviderResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{3}
}

func (x *LoanProviderResponse) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *LoanProviderResponse) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

func (x *LoanProviderResponse) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *LoanProviderResponse) GetProviderConfig() *ProviderConfig {
	if x != nil {
		return x.ProviderConfig
	}
	return nil
}

func (x *LoanProviderResponse) GetProviderType() string {
	if x != nil {
		return x.ProviderType
	}
	return ""
}

type LoanProvidersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Providers []*LoanProviderResponse `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (x *LoanProvidersResponse) Reset() {
	*x = LoanProvidersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProvidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProvidersResponse) ProtoMessage() {}

func (x *LoanProvidersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProvidersResponse.ProtoReflect.Descriptor instead.
func (*LoanProvidersResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{4}
}

func (x *LoanProvidersResponse) GetProviders() []*LoanProviderResponse {
	if x != nil {
		return x.Providers
	}
	return nil
}

type InitiateLoanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider Provider `protobuf:"varint,1,opt,name=provider,proto3,enum=rmnkmr.lsp.v1.Provider" json:"provider,omitempty"`
	Amount   string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *InitiateLoanRequest) Reset() {
	*x = InitiateLoanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitiateLoanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateLoanRequest) ProtoMessage() {}

func (x *InitiateLoanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateLoanRequest.ProtoReflect.Descriptor instead.
func (*InitiateLoanRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{5}
}

func (x *InitiateLoanRequest) GetProvider() Provider {
	if x != nil {
		return x.Provider
	}
	return Provider_UNKNOWN
}

func (x *InitiateLoanRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type InitiateLoanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanId string `protobuf:"bytes,1,opt,name=loan_id,json=loanId,proto3" json:"loan_id,omitempty"`
}

func (x *InitiateLoanResponse) Reset() {
	*x = InitiateLoanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitiateLoanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateLoanResponse) ProtoMessage() {}

func (x *InitiateLoanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateLoanResponse.ProtoReflect.Descriptor instead.
func (*InitiateLoanResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{6}
}

func (x *InitiateLoanResponse) GetLoanId() string {
	if x != nil {
		return x.LoanId
	}
	return ""
}

type UserPersonalDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata        string `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address         string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Pincode         string `protobuf:"bytes,4,opt,name=pincode,proto3" json:"pincode,omitempty"`
	PhoneNumber     string `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Pan             string `protobuf:"bytes,6,opt,name=pan,proto3" json:"pan,omitempty"`
	Dob             string `protobuf:"bytes,7,opt,name=dob,proto3" json:"dob,omitempty"`
	Gender          string `protobuf:"bytes,8,opt,name=gender,proto3" json:"gender,omitempty"`
	Email           string `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`
	FathersName     string `protobuf:"bytes,10,opt,name=fathers_name,json=fathersName,proto3" json:"fathers_name,omitempty"`
	MothersName     string `protobuf:"bytes,11,opt,name=mothers_name,json=mothersName,proto3" json:"mothers_name,omitempty"`
	City            string `protobuf:"bytes,12,opt,name=city,proto3" json:"city,omitempty"`
	State           string `protobuf:"bytes,13,opt,name=state,proto3" json:"state,omitempty"`
	AddrProofNumber string `protobuf:"bytes,14,opt,name=AddrProofNumber,proto3" json:"AddrProofNumber,omitempty"`
	NbfcBorrowerId  string `protobuf:"bytes,15,opt,name=NbfcBorrowerId,proto3" json:"NbfcBorrowerId,omitempty"`
	MerchantId      string `protobuf:"bytes,16,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	PanMetadata     string `protobuf:"bytes,17,opt,name=pan_metadata,json=panMetadata,proto3" json:"pan_metadata,omitempty"`
}

func (x *UserPersonalDetails) Reset() {
	*x = UserPersonalDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPersonalDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPersonalDetails) ProtoMessage() {}

func (x *UserPersonalDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPersonalDetails.ProtoReflect.Descriptor instead.
func (*UserPersonalDetails) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{7}
}

func (x *UserPersonalDetails) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *UserPersonalDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserPersonalDetails) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserPersonalDetails) GetPincode() string {
	if x != nil {
		return x.Pincode
	}
	return ""
}

func (x *UserPersonalDetails) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UserPersonalDetails) GetPan() string {
	if x != nil {
		return x.Pan
	}
	return ""
}

func (x *UserPersonalDetails) GetDob() string {
	if x != nil {
		return x.Dob
	}
	return ""
}

func (x *UserPersonalDetails) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UserPersonalDetails) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserPersonalDetails) GetFathersName() string {
	if x != nil {
		return x.FathersName
	}
	return ""
}

func (x *UserPersonalDetails) GetMothersName() string {
	if x != nil {
		return x.MothersName
	}
	return ""
}

func (x *UserPersonalDetails) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserPersonalDetails) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *UserPersonalDetails) GetAddrProofNumber() string {
	if x != nil {
		return x.AddrProofNumber
	}
	return ""
}

func (x *UserPersonalDetails) GetNbfcBorrowerId() string {
	if x != nil {
		return x.NbfcBorrowerId
	}
	return ""
}

func (x *UserPersonalDetails) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *UserPersonalDetails) GetPanMetadata() string {
	if x != nil {
		return x.PanMetadata
	}
	return ""
}

type UserLoanDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata                   string               `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	LoanAmount                 float32              `protobuf:"fixed32,2,opt,name=loan_amount,json=loanAmount,proto3" json:"loan_amount,omitempty"`
	LoanTenure                 int64                `protobuf:"varint,3,opt,name=loan_tenure,json=loanTenure,proto3" json:"loan_tenure,omitempty"`
	LoanInterestAmount         float32              `protobuf:"fixed32,4,opt,name=loan_interest_amount,json=loanInterestAmount,proto3" json:"loan_interest_amount,omitempty"`
	Installments               int64                `protobuf:"varint,5,opt,name=Installments,proto3" json:"Installments,omitempty"`
	ProcessingFeeAmount        float32              `protobuf:"fixed32,6,opt,name=processing_fee_amount,json=processingFeeAmount,proto3" json:"processing_fee_amount,omitempty"`
	ProcessingFeePercentage    float32              `protobuf:"fixed32,7,opt,name=processing_fee_percentage,json=processingFeePercentage,proto3" json:"processing_fee_percentage,omitempty"`
	ProcessingFeeGst           float32              `protobuf:"fixed32,8,opt,name=processing_fee_gst,json=processingFeeGst,proto3" json:"processing_fee_gst,omitempty"`
	ProcessingFeeGstPercentage float32              `protobuf:"fixed32,9,opt,name=processing_fee_gst_percentage,json=processingFeeGstPercentage,proto3" json:"processing_fee_gst_percentage,omitempty"`
	Nbfc                       string               `protobuf:"bytes,10,opt,name=nbfc,proto3" json:"nbfc,omitempty"`
	InstallmentFrequency       InstallmentFrequency `protobuf:"varint,11,opt,name=installment_frequency,json=installmentFrequency,proto3,enum=rmnkmr.lsp.v1.InstallmentFrequency" json:"installment_frequency,omitempty"`
	LoanInterestPercentage     float32              `protobuf:"fixed32,12,opt,name=loan_interest_percentage,json=loanInterestPercentage,proto3" json:"loan_interest_percentage,omitempty"`
	InstallmentAmount          int64                `protobuf:"varint,13,opt,name=installment_amount,json=installmentAmount,proto3" json:"installment_amount,omitempty"`
	LeadId                     string               `protobuf:"bytes,14,opt,name=lead_id,json=leadId,proto3" json:"lead_id,omitempty"`
	InstallmentData            []*Installment       `protobuf:"bytes,15,rep,name=Installment_data,json=InstallmentData,proto3" json:"Installment_data,omitempty"`
	FirstEmiDate               int64                `protobuf:"varint,16,opt,name=first_emi_date,json=firstEmiDate,proto3" json:"first_emi_date,omitempty"`
	DisbursalDate              int64                `protobuf:"varint,17,opt,name=disbursal_date,json=disbursalDate,proto3" json:"disbursal_date,omitempty"`
}

func (x *UserLoanDetails) Reset() {
	*x = UserLoanDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoanDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoanDetails) ProtoMessage() {}

func (x *UserLoanDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoanDetails.ProtoReflect.Descriptor instead.
func (*UserLoanDetails) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{8}
}

func (x *UserLoanDetails) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *UserLoanDetails) GetLoanAmount() float32 {
	if x != nil {
		return x.LoanAmount
	}
	return 0
}

func (x *UserLoanDetails) GetLoanTenure() int64 {
	if x != nil {
		return x.LoanTenure
	}
	return 0
}

func (x *UserLoanDetails) GetLoanInterestAmount() float32 {
	if x != nil {
		return x.LoanInterestAmount
	}
	return 0
}

func (x *UserLoanDetails) GetInstallments() int64 {
	if x != nil {
		return x.Installments
	}
	return 0
}

func (x *UserLoanDetails) GetProcessingFeeAmount() float32 {
	if x != nil {
		return x.ProcessingFeeAmount
	}
	return 0
}

func (x *UserLoanDetails) GetProcessingFeePercentage() float32 {
	if x != nil {
		return x.ProcessingFeePercentage
	}
	return 0
}

func (x *UserLoanDetails) GetProcessingFeeGst() float32 {
	if x != nil {
		return x.ProcessingFeeGst
	}
	return 0
}

func (x *UserLoanDetails) GetProcessingFeeGstPercentage() float32 {
	if x != nil {
		return x.ProcessingFeeGstPercentage
	}
	return 0
}

func (x *UserLoanDetails) GetNbfc() string {
	if x != nil {
		return x.Nbfc
	}
	return ""
}

func (x *UserLoanDetails) GetInstallmentFrequency() InstallmentFrequency {
	if x != nil {
		return x.InstallmentFrequency
	}
	return InstallmentFrequency_DAILY
}

func (x *UserLoanDetails) GetLoanInterestPercentage() float32 {
	if x != nil {
		return x.LoanInterestPercentage
	}
	return 0
}

func (x *UserLoanDetails) GetInstallmentAmount() int64 {
	if x != nil {
		return x.InstallmentAmount
	}
	return 0
}

func (x *UserLoanDetails) GetLeadId() string {
	if x != nil {
		return x.LeadId
	}
	return ""
}

func (x *UserLoanDetails) GetInstallmentData() []*Installment {
	if x != nil {
		return x.InstallmentData
	}
	return nil
}

func (x *UserLoanDetails) GetFirstEmiDate() int64 {
	if x != nil {
		return x.FirstEmiDate
	}
	return 0
}

func (x *UserLoanDetails) GetDisbursalDate() int64 {
	if x != nil {
		return x.DisbursalDate
	}
	return 0
}

type UserKycDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Identifier   string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Url          string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	BucketName   string `protobuf:"bytes,4,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	Verified     bool   `protobuf:"varint,5,opt,name=verified,proto3" json:"verified,omitempty"`
	DocumentName string `protobuf:"bytes,6,opt,name=document_name,json=documentName,proto3" json:"document_name,omitempty"`
	ShareCode    string `protobuf:"bytes,7,opt,name=share_code,json=shareCode,proto3" json:"share_code,omitempty"`
}

func (x *UserKycDetails) Reset() {
	*x = UserKycDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserKycDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserKycDetails) ProtoMessage() {}

func (x *UserKycDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserKycDetails.ProtoReflect.Descriptor instead.
func (*UserKycDetails) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{9}
}

func (x *UserKycDetails) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserKycDetails) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *UserKycDetails) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UserKycDetails) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *UserKycDetails) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *UserKycDetails) GetDocumentName() string {
	if x != nil {
		return x.DocumentName
	}
	return ""
}

func (x *UserKycDetails) GetShareCode() string {
	if x != nil {
		return x.ShareCode
	}
	return ""
}

type UserBankDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankName              string                      `protobuf:"bytes,1,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	BankAccNum            string                      `protobuf:"bytes,2,opt,name=bank_acc_num,json=bankAccNum,proto3" json:"bank_acc_num,omitempty"`
	BankIfsc              string                      `protobuf:"bytes,3,opt,name=bank_ifsc,json=bankIfsc,proto3" json:"bank_ifsc,omitempty"`
	UpiVpa                string                      `protobuf:"bytes,4,opt,name=upi_vpa,json=upiVpa,proto3" json:"upi_vpa,omitempty"`
	AccountHolderName     string                      `protobuf:"bytes,5,opt,name=account_holder_name,json=accountHolderName,proto3" json:"account_holder_name,omitempty"`
	Type                  string                      `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	PanBankNameSimilarity int64                       `protobuf:"varint,7,opt,name=pan_bank_name_similarity,json=panBankNameSimilarity,proto3" json:"pan_bank_name_similarity,omitempty"`
	AccountType           UserBankDetails_AccountType `protobuf:"varint,8,opt,name=account_type,json=accountType,proto3,enum=rmnkmr.lsp.v1.UserBankDetails_AccountType" json:"account_type,omitempty"`
}

func (x *UserBankDetails) Reset() {
	*x = UserBankDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBankDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBankDetails) ProtoMessage() {}

func (x *UserBankDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBankDetails.ProtoReflect.Descriptor instead.
func (*UserBankDetails) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{10}
}

func (x *UserBankDetails) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *UserBankDetails) GetBankAccNum() string {
	if x != nil {
		return x.BankAccNum
	}
	return ""
}

func (x *UserBankDetails) GetBankIfsc() string {
	if x != nil {
		return x.BankIfsc
	}
	return ""
}

func (x *UserBankDetails) GetUpiVpa() string {
	if x != nil {
		return x.UpiVpa
	}
	return ""
}

func (x *UserBankDetails) GetAccountHolderName() string {
	if x != nil {
		return x.AccountHolderName
	}
	return ""
}

func (x *UserBankDetails) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserBankDetails) GetPanBankNameSimilarity() int64 {
	if x != nil {
		return x.PanBankNameSimilarity
	}
	return 0
}

func (x *UserBankDetails) GetAccountType() UserBankDetails_AccountType {
	if x != nil {
		return x.AccountType
	}
	return UserBankDetails_SAVINGS
}

type Installment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number          float32 `protobuf:"fixed32,1,opt,name=number,proto3" json:"number,omitempty"`
	InstallmentDate int64   `protobuf:"varint,2,opt,name=installment_date,json=installmentDate,proto3" json:"installment_date,omitempty"`
	DueAmount       float32 `protobuf:"fixed32,3,opt,name=due_amount,json=dueAmount,proto3" json:"due_amount,omitempty"`
	PrincipalDue    float32 `protobuf:"fixed32,4,opt,name=principal_due,json=principalDue,proto3" json:"principal_due,omitempty"`
	InterestDue     float32 `protobuf:"fixed32,5,opt,name=interest_due,json=interestDue,proto3" json:"interest_due,omitempty"`
}

func (x *Installment) Reset() {
	*x = Installment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Installment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Installment) ProtoMessage() {}

func (x *Installment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Installment.ProtoReflect.Descriptor instead.
func (*Installment) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{11}
}

func (x *Installment) GetNumber() float32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Installment) GetInstallmentDate() int64 {
	if x != nil {
		return x.InstallmentDate
	}
	return 0
}

func (x *Installment) GetDueAmount() float32 {
	if x != nil {
		return x.DueAmount
	}
	return 0
}

func (x *Installment) GetPrincipalDue() float32 {
	if x != nil {
		return x.PrincipalDue
	}
	return 0
}

func (x *Installment) GetInterestDue() float32 {
	if x != nil {
		return x.InterestDue
	}
	return 0
}

type UserBureauDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	rmnkmrScore                   int64   `protobuf:"varint,1,opt,name=rmnkmr_score,json=rmnkmrScore,proto3" json:"rmnkmr_score,omitempty"`
	Avg_3MntsTxnAmt            float32 `protobuf:"fixed32,2,opt,name=avg_3_mnts_txn_amt,json=avg3MntsTxnAmt,proto3" json:"avg_3_mnts_txn_amt,omitempty"`
	Vintage                    int64   `protobuf:"varint,3,opt,name=vintage,proto3" json:"vintage,omitempty"`
	Avg_3MntsAppSessions       float32 `protobuf:"fixed32,4,opt,name=avg_3_mnts_app_sessions,json=avg3MntsAppSessions,proto3" json:"avg_3_mnts_app_sessions,omitempty"`
	DaysSinceLastActive        int64   `protobuf:"varint,5,opt,name=days_since_last_active,json=daysSinceLastActive,proto3" json:"days_since_last_active,omitempty"`
	Last_30DaysTransactedFlag  string  `protobuf:"bytes,6,opt,name=last_30_days_transacted_flag,json=last30DaysTransactedFlag,proto3" json:"last_30_days_transacted_flag,omitempty"`
	MntCustomerCountLag1       int64   `protobuf:"varint,7,opt,name=mnt_customer_count_lag1,json=mntCustomerCountLag1,proto3" json:"mnt_customer_count_lag1,omitempty"`
	MntCustomerCountLag2       int64   `protobuf:"varint,8,opt,name=mnt_customer_count_lag2,json=mntCustomerCountLag2,proto3" json:"mnt_customer_count_lag2,omitempty"`
	MntCustomerCountLag3       int64   `protobuf:"varint,9,opt,name=mnt_customer_count_lag3,json=mntCustomerCountLag3,proto3" json:"mnt_customer_count_lag3,omitempty"`
	MntTxnAmtLag1              float32 `protobuf:"fixed32,10,opt,name=mnt_txn_amt_lag1,json=mntTxnAmtLag1,proto3" json:"mnt_txn_amt_lag1,omitempty"`
	MntTxnAmtLag2              float32 `protobuf:"fixed32,11,opt,name=mnt_txn_amt_lag2,json=mntTxnAmtLag2,proto3" json:"mnt_txn_amt_lag2,omitempty"`
	MntTxnAmtLag3              float32 `protobuf:"fixed32,12,opt,name=mnt_txn_amt_lag3,json=mntTxnAmtLag3,proto3" json:"mnt_txn_amt_lag3,omitempty"`
	BusinessCategory           string  `protobuf:"bytes,13,opt,name=BusinessCategory,proto3" json:"BusinessCategory,omitempty"`
	WrittenoffOrDefault        int64   `protobuf:"varint,14,opt,name=writtenoff_or_default,json=writtenoffOrDefault,proto3" json:"writtenoff_or_default,omitempty"`
	DpdInLast_12Months         int64   `protobuf:"varint,15,opt,name=dpd_in_last_12_months,json=dpdInLast12Months,proto3" json:"dpd_in_last_12_months,omitempty"`
	CntActiveUnsecuredLoans    int64   `protobuf:"varint,16,opt,name=cnt_active_unsecured_loans,json=cntActiveUnsecuredLoans,proto3" json:"cnt_active_unsecured_loans,omitempty"`
	ActiveAccountCnt           int64   `protobuf:"varint,17,opt,name=active_account_cnt,json=activeAccountCnt,proto3" json:"active_account_cnt,omitempty"`
	InactiveAccountCnt         int64   `protobuf:"varint,18,opt,name=inactive_account_cnt,json=inactiveAccountCnt,proto3" json:"inactive_account_cnt,omitempty"`
	WoSettledSfWd              int64   `protobuf:"varint,19,opt,name=wo_settled_sf_wd,json=woSettledSfWd,proto3" json:"wo_settled_sf_wd,omitempty"`
	Num_30PlusDpdLast_3Months  int64   `protobuf:"varint,20,opt,name=num_30plus_dpd_last_3_months,json=num30plusDpdLast3Months,proto3" json:"num_30plus_dpd_last_3_months,omitempty"`
	Num_90PlusDpdLast_12Months int64   `protobuf:"varint,21,opt,name=num_90plus_dpd_last_12_months,json=num90plusDpdLast12Months,proto3" json:"num_90plus_dpd_last_12_months,omitempty"`
	BureauFile                 string  `protobuf:"bytes,22,opt,name=bureau_file,json=bureauFile,proto3" json:"bureau_file,omitempty"`
	Foir                       string  `protobuf:"bytes,23,opt,name=foir,proto3" json:"foir,omitempty"`
	CustomerTypeNtc            bool    `protobuf:"varint,24,opt,name=customer_type_ntc,json=customerTypeNtc,proto3" json:"customer_type_ntc,omitempty"`
	CurrentOverdueValue        int64   `protobuf:"varint,25,opt,name=current_overdue_value,json=currentOverdueValue,proto3" json:"current_overdue_value,omitempty"`
	BureauScore                int64   `protobuf:"varint,26,opt,name=bureau_score,json=bureauScore,proto3" json:"bureau_score,omitempty"`
	EnquiriesBureau_30Days     int64   `protobuf:"varint,27,opt,name=enquiries_bureau_30_days,json=enquiriesBureau30Days,proto3" json:"enquiries_bureau_30_days,omitempty"`
	BureauType                 string  `protobuf:"bytes,28,opt,name=bureau_type,json=bureauType,proto3" json:"bureau_type,omitempty"`
	MonthlyEmi                 float32 `protobuf:"fixed32,29,opt,name=monthly_emi,json=monthlyEmi,proto3" json:"monthly_emi,omitempty"`
	EstimatedIncome            float32 `protobuf:"fixed32,30,opt,name=estimated_income,json=estimatedIncome,proto3" json:"estimated_income,omitempty"`
}

func (x *UserBureauDetails) Reset() {
	*x = UserBureauDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBureauDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBureauDetails) ProtoMessage() {}

func (x *UserBureauDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBureauDetails.ProtoReflect.Descriptor instead.
func (*UserBureauDetails) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{12}
}

func (x *UserBureauDetails) GetrmnkmrScore() int64 {
	if x != nil {
		return x.rmnkmrScore
	}
	return 0
}

func (x *UserBureauDetails) GetAvg_3MntsTxnAmt() float32 {
	if x != nil {
		return x.Avg_3MntsTxnAmt
	}
	return 0
}

func (x *UserBureauDetails) GetVintage() int64 {
	if x != nil {
		return x.Vintage
	}
	return 0
}

func (x *UserBureauDetails) GetAvg_3MntsAppSessions() float32 {
	if x != nil {
		return x.Avg_3MntsAppSessions
	}
	return 0
}

func (x *UserBureauDetails) GetDaysSinceLastActive() int64 {
	if x != nil {
		return x.DaysSinceLastActive
	}
	return 0
}

func (x *UserBureauDetails) GetLast_30DaysTransactedFlag() string {
	if x != nil {
		return x.Last_30DaysTransactedFlag
	}
	return ""
}

func (x *UserBureauDetails) GetMntCustomerCountLag1() int64 {
	if x != nil {
		return x.MntCustomerCountLag1
	}
	return 0
}

func (x *UserBureauDetails) GetMntCustomerCountLag2() int64 {
	if x != nil {
		return x.MntCustomerCountLag2
	}
	return 0
}

func (x *UserBureauDetails) GetMntCustomerCountLag3() int64 {
	if x != nil {
		return x.MntCustomerCountLag3
	}
	return 0
}

func (x *UserBureauDetails) GetMntTxnAmtLag1() float32 {
	if x != nil {
		return x.MntTxnAmtLag1
	}
	return 0
}

func (x *UserBureauDetails) GetMntTxnAmtLag2() float32 {
	if x != nil {
		return x.MntTxnAmtLag2
	}
	return 0
}

func (x *UserBureauDetails) GetMntTxnAmtLag3() float32 {
	if x != nil {
		return x.MntTxnAmtLag3
	}
	return 0
}

func (x *UserBureauDetails) GetBusinessCategory() string {
	if x != nil {
		return x.BusinessCategory
	}
	return ""
}

func (x *UserBureauDetails) GetWrittenoffOrDefault() int64 {
	if x != nil {
		return x.WrittenoffOrDefault
	}
	return 0
}

func (x *UserBureauDetails) GetDpdInLast_12Months() int64 {
	if x != nil {
		return x.DpdInLast_12Months
	}
	return 0
}

func (x *UserBureauDetails) GetCntActiveUnsecuredLoans() int64 {
	if x != nil {
		return x.CntActiveUnsecuredLoans
	}
	return 0
}

func (x *UserBureauDetails) GetActiveAccountCnt() int64 {
	if x != nil {
		return x.ActiveAccountCnt
	}
	return 0
}

func (x *UserBureauDetails) GetInactiveAccountCnt() int64 {
	if x != nil {
		return x.InactiveAccountCnt
	}
	return 0
}

func (x *UserBureauDetails) GetWoSettledSfWd() int64 {
	if x != nil {
		return x.WoSettledSfWd
	}
	return 0
}

func (x *UserBureauDetails) GetNum_30PlusDpdLast_3Months() int64 {
	if x != nil {
		return x.Num_30PlusDpdLast_3Months
	}
	return 0
}

func (x *UserBureauDetails) GetNum_90PlusDpdLast_12Months() int64 {
	if x != nil {
		return x.Num_90PlusDpdLast_12Months
	}
	return 0
}

func (x *UserBureauDetails) GetBureauFile() string {
	if x != nil {
		return x.BureauFile
	}
	return ""
}

func (x *UserBureauDetails) GetFoir() string {
	if x != nil {
		return x.Foir
	}
	return ""
}

func (x *UserBureauDetails) GetCustomerTypeNtc() bool {
	if x != nil {
		return x.CustomerTypeNtc
	}
	return false
}

func (x *UserBureauDetails) GetCurrentOverdueValue() int64 {
	if x != nil {
		return x.CurrentOverdueValue
	}
	return 0
}

func (x *UserBureauDetails) GetBureauScore() int64 {
	if x != nil {
		return x.BureauScore
	}
	return 0
}

func (x *UserBureauDetails) GetEnquiriesBureau_30Days() int64 {
	if x != nil {
		return x.EnquiriesBureau_30Days
	}
	return 0
}

func (x *UserBureauDetails) GetBureauType() string {
	if x != nil {
		return x.BureauType
	}
	return ""
}

func (x *UserBureauDetails) GetMonthlyEmi() float32 {
	if x != nil {
		return x.MonthlyEmi
	}
	return 0
}

func (x *UserBureauDetails) GetEstimatedIncome() float32 {
	if x != nil {
		return x.EstimatedIncome
	}
	return 0
}

type CreateLeadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata            *RequestMetadata     `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	UserPersonalDetails *UserPersonalDetails `protobuf:"bytes,2,opt,name=user_personal_details,json=userPersonalDetails,proto3" json:"user_personal_details,omitempty"`
	UserLoanDetails     *UserLoanDetails     `protobuf:"bytes,3,opt,name=user_loan_details,json=userLoanDetails,proto3" json:"user_loan_details,omitempty"`
	UserBureauDetails   *UserBureauDetails   `protobuf:"bytes,4,opt,name=user_bureau_details,json=userBureauDetails,proto3" json:"user_bureau_details,omitempty"`
}

func (x *CreateLeadRequest) Reset() {
	*x = CreateLeadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLeadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeadRequest) ProtoMessage() {}

func (x *CreateLeadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeadRequest.ProtoReflect.Descriptor instead.
func (*CreateLeadRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{13}
}

func (x *CreateLeadRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateLeadRequest) GetUserPersonalDetails() *UserPersonalDetails {
	if x != nil {
		return x.UserPersonalDetails
	}
	return nil
}

func (x *CreateLeadRequest) GetUserLoanDetails() *UserLoanDetails {
	if x != nil {
		return x.UserLoanDetails
	}
	return nil
}

func (x *CreateLeadRequest) GetUserBureauDetails() *UserBureauDetails {
	if x != nil {
		return x.UserBureauDetails
	}
	return nil
}

type CreateLeadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NbfcLeadId      string            `protobuf:"bytes,1,opt,name=nbfc_lead_id,json=nbfcLeadId,proto3" json:"nbfc_lead_id,omitempty"`
	NbfcLoanId      string            `protobuf:"bytes,2,opt,name=nbfc_loan_id,json=nbfcLoanId,proto3" json:"nbfc_loan_id,omitempty"`
	NbfcBorrowerId  string            `protobuf:"bytes,3,opt,name=nbfc_borrower_id,json=nbfcBorrowerId,proto3" json:"nbfc_borrower_id,omitempty"`
	Status          string            `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	RejectionReason map[string]string `protobuf:"bytes,5,rep,name=rejection_reason,json=rejectionReason,proto3" json:"rejection_reason,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RedirectUrl     string            `protobuf:"bytes,6,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *CreateLeadResponse) Reset() {
	*x = CreateLeadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLeadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeadResponse) ProtoMessage() {}

func (x *CreateLeadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeadResponse.ProtoReflect.Descriptor instead.
func (*CreateLeadResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{14}
}

func (x *CreateLeadResponse) GetNbfcLeadId() string {
	if x != nil {
		return x.NbfcLeadId
	}
	return ""
}

func (x *CreateLeadResponse) GetNbfcLoanId() string {
	if x != nil {
		return x.NbfcLoanId
	}
	return ""
}

func (x *CreateLeadResponse) GetNbfcBorrowerId() string {
	if x != nil {
		return x.NbfcBorrowerId
	}
	return ""
}

func (x *CreateLeadResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateLeadResponse) GetRejectionReason() map[string]string {
	if x != nil {
		return x.RejectionReason
	}
	return nil
}

func (x *CreateLeadResponse) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type CheckLoanStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata   *RequestMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NbfcLeadId string           `protobuf:"bytes,2,opt,name=nbfc_lead_id,json=nbfcLeadId,proto3" json:"nbfc_lead_id,omitempty"`
}

func (x *CheckLoanStatusRequest) Reset() {
	*x = CheckLoanStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLoanStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLoanStatusRequest) ProtoMessage() {}

func (x *CheckLoanStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLoanStatusRequest.ProtoReflect.Descriptor instead.
func (*CheckLoanStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{15}
}

func (x *CheckLoanStatusRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CheckLoanStatusRequest) GetNbfcLeadId() string {
	if x != nil {
		return x.NbfcLeadId
	}
	return ""
}

type CheckLoanStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status CheckLoanStatusResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=rmnkmr.lsp.v1.CheckLoanStatusResponse_Status" json:"status,omitempty"`
}

func (x *CheckLoanStatusResponse) Reset() {
	*x = CheckLoanStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLoanStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLoanStatusResponse) ProtoMessage() {}

func (x *CheckLoanStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLoanStatusResponse.ProtoReflect.Descriptor instead.
func (*CheckLoanStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{16}
}

func (x *CheckLoanStatusResponse) GetStatus() CheckLoanStatusResponse_Status {
	if x != nil {
		return x.Status
	}
	return CheckLoanStatusResponse_PENDING
}

type CheckStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Results *StatusResult `protobuf:"bytes,2,opt,name=results,proto3" json:"results,omitempty"`
}

func (x *CheckStatusResponse) Reset() {
	*x = CheckStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckStatusResponse) ProtoMessage() {}

func (x *CheckStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckStatusResponse.ProtoReflect.Descriptor instead.
func (*CheckStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{17}
}

func (x *CheckStatusResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CheckStatusResponse) GetResults() *StatusResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type StatusResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId     string                    `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	ApplicationStatus string                    `protobuf:"bytes,2,opt,name=application_status,json=applicationStatus,proto3" json:"application_status,omitempty"`
	BankStatementUrl  string                    `protobuf:"bytes,3,opt,name=bank_statement_url,json=bankStatementUrl,proto3" json:"bank_statement_url,omitempty"`
	OfferDetails      *StatusResultOfferDetails `protobuf:"bytes,4,opt,name=offer_details,json=offerDetails,proto3" json:"offer_details,omitempty"`
}

func (x *StatusResult) Reset() {
	*x = StatusResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResult) ProtoMessage() {}

func (x *StatusResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResult.ProtoReflect.Descriptor instead.
func (*StatusResult) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{18}
}

func (x *StatusResult) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *StatusResult) GetApplicationStatus() string {
	if x != nil {
		return x.ApplicationStatus
	}
	return ""
}

func (x *StatusResult) GetBankStatementUrl() string {
	if x != nil {
		return x.BankStatementUrl
	}
	return ""
}

func (x *StatusResult) GetOfferDetails() *StatusResultOfferDetails {
	if x != nil {
		return x.OfferDetails
	}
	return nil
}

type StatusResultOfferDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount            float32 `protobuf:"fixed32,1,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Tenure            float32 `protobuf:"fixed32,2,opt,name=Tenure,proto3" json:"Tenure,omitempty"`
	Roi               float32 `protobuf:"fixed32,3,opt,name=Roi,proto3" json:"Roi,omitempty"`
	ProcessingFeeRate float32 `protobuf:"fixed32,4,opt,name=ProcessingFeeRate,proto3" json:"ProcessingFeeRate,omitempty"`
	Emi               float32 `protobuf:"fixed32,5,opt,name=Emi,proto3" json:"Emi,omitempty"`
	SpdcAmount        float32 `protobuf:"fixed32,6,opt,name=SpdcAmount,proto3" json:"SpdcAmount,omitempty"`
	DisbursalAmount   float32 `protobuf:"fixed32,7,opt,name=DisbursalAmount,proto3" json:"DisbursalAmount,omitempty"`
	FirstEmiDate      string  `protobuf:"bytes,8,opt,name=FirstEmiDate,proto3" json:"FirstEmiDate,omitempty"`
}

func (x *StatusResultOfferDetails) Reset() {
	*x = StatusResultOfferDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResultOfferDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResultOfferDetails) ProtoMessage() {}

func (x *StatusResultOfferDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResultOfferDetails.ProtoReflect.Descriptor instead.
func (*StatusResultOfferDetails) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{19}
}

func (x *StatusResultOfferDetails) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *StatusResultOfferDetails) GetTenure() float32 {
	if x != nil {
		return x.Tenure
	}
	return 0
}

func (x *StatusResultOfferDetails) GetRoi() float32 {
	if x != nil {
		return x.Roi
	}
	return 0
}

func (x *StatusResultOfferDetails) GetProcessingFeeRate() float32 {
	if x != nil {
		return x.ProcessingFeeRate
	}
	return 0
}

func (x *StatusResultOfferDetails) GetEmi() float32 {
	if x != nil {
		return x.Emi
	}
	return 0
}

func (x *StatusResultOfferDetails) GetSpdcAmount() float32 {
	if x != nil {
		return x.SpdcAmount
	}
	return 0
}

func (x *StatusResultOfferDetails) GetDisbursalAmount() float32 {
	if x != nil {
		return x.DisbursalAmount
	}
	return 0
}

func (x *StatusResultOfferDetails) GetFirstEmiDate() string {
	if x != nil {
		return x.FirstEmiDate
	}
	return ""
}

type CreateRepaymentScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepaymentFrequency string                 `protobuf:"bytes,1,opt,name=RepaymentFrequency,proto3" json:"RepaymentFrequency,omitempty"`
	EMITenure          string                 `protobuf:"bytes,2,opt,name=EMITenure,proto3" json:"EMITenure,omitempty"`
	EMIStartDate       string                 `protobuf:"bytes,3,opt,name=EMIStartDate,proto3" json:"EMIStartDate,omitempty"`
	Checksum           string                 `protobuf:"bytes,4,opt,name=Checksum,proto3" json:"Checksum,omitempty"`
	LoanID             string                 `protobuf:"bytes,5,opt,name=LoanID,proto3" json:"LoanID,omitempty"`
	PaymentSchedule    []*PaymentScheduleData `protobuf:"bytes,6,rep,name=PaymentSchedule,proto3" json:"PaymentSchedule,omitempty"`
	Provider           Provider               `protobuf:"varint,7,opt,name=provider,proto3,enum=rmnkmr.lsp.v1.Provider" json:"provider,omitempty"`
}

func (x *CreateRepaymentScheduleRequest) Reset() {
	*x = CreateRepaymentScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRepaymentScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepaymentScheduleRequest) ProtoMessage() {}

func (x *CreateRepaymentScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepaymentScheduleRequest.ProtoReflect.Descriptor instead.
func (*CreateRepaymentScheduleRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{20}
}

func (x *CreateRepaymentScheduleRequest) GetRepaymentFrequency() string {
	if x != nil {
		return x.RepaymentFrequency
	}
	return ""
}

func (x *CreateRepaymentScheduleRequest) GetEMITenure() string {
	if x != nil {
		return x.EMITenure
	}
	return ""
}

func (x *CreateRepaymentScheduleRequest) GetEMIStartDate() string {
	if x != nil {
		return x.EMIStartDate
	}
	return ""
}

func (x *CreateRepaymentScheduleRequest) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *CreateRepaymentScheduleRequest) GetLoanID() string {
	if x != nil {
		return x.LoanID
	}
	return ""
}

func (x *CreateRepaymentScheduleRequest) GetPaymentSchedule() []*PaymentScheduleData {
	if x != nil {
		return x.PaymentSchedule
	}
	return nil
}

func (x *CreateRepaymentScheduleRequest) GetProvider() Provider {
	if x != nil {
		return x.Provider
	}
	return Provider_UNKNOWN
}

type PaymentScheduleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interest     string `protobuf:"bytes,1,opt,name=interest,proto3" json:"interest,omitempty"`
	OtherCharges string `protobuf:"bytes,2,opt,name=OtherCharges,proto3" json:"OtherCharges,omitempty"`
	Principle    string `protobuf:"bytes,3,opt,name=Principle,proto3" json:"Principle,omitempty"`
	TotalAmount  string `protobuf:"bytes,4,opt,name=TotalAmount,proto3" json:"TotalAmount,omitempty"`
	Date         string `protobuf:"bytes,5,opt,name=Date,proto3" json:"Date,omitempty"`
}

func (x *PaymentScheduleData) Reset() {
	*x = PaymentScheduleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentScheduleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentScheduleData) ProtoMessage() {}

func (x *PaymentScheduleData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentScheduleData.ProtoReflect.Descriptor instead.
func (*PaymentScheduleData) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{21}
}

func (x *PaymentScheduleData) GetInterest() string {
	if x != nil {
		return x.Interest
	}
	return ""
}

func (x *PaymentScheduleData) GetOtherCharges() string {
	if x != nil {
		return x.OtherCharges
	}
	return ""
}

func (x *PaymentScheduleData) GetPrinciple() string {
	if x != nil {
		return x.Principle
	}
	return ""
}

func (x *PaymentScheduleData) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *PaymentScheduleData) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string       `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Type   DocumentType `protobuf:"varint,2,opt,name=type,proto3,enum=rmnkmr.lsp.v1.DocumentType" json:"type,omitempty"`
	Bucket string       `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Name   string       `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	File   []byte       `protobuf:"bytes,5,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{22}
}

func (x *Document) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Document) GetType() DocumentType {
	if x != nil {
		return x.Type
	}
	return DocumentType_AADHAAR
}

func (x *Document) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *Document) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Document) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type UploadDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata            *RequestMetadata     `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	UserPersonalDetails *UserPersonalDetails `protobuf:"bytes,2,opt,name=user_personal_details,json=userPersonalDetails,proto3" json:"user_personal_details,omitempty"`
	UserLoanDetails     *UserLoanDetails     `protobuf:"bytes,3,opt,name=user_loan_details,json=userLoanDetails,proto3" json:"user_loan_details,omitempty"`
}

func (x *UploadDocumentRequest) Reset() {
	*x = UploadDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentRequest) ProtoMessage() {}

func (x *UploadDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentRequest.ProtoReflect.Descriptor instead.
func (*UploadDocumentRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{23}
}

func (x *UploadDocumentRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UploadDocumentRequest) GetUserPersonalDetails() *UserPersonalDetails {
	if x != nil {
		return x.UserPersonalDetails
	}
	return nil
}

func (x *UploadDocumentRequest) GetUserLoanDetails() *UserLoanDetails {
	if x != nil {
		return x.UserLoanDetails
	}
	return nil
}

type UploadKycDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata            *RequestMetadata     `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	UserPersonalDetails *UserPersonalDetails `protobuf:"bytes,2,opt,name=user_personal_details,json=userPersonalDetails,proto3" json:"user_personal_details,omitempty"`
	UserLoanDetails     *UserLoanDetails     `protobuf:"bytes,3,opt,name=user_loan_details,json=userLoanDetails,proto3" json:"user_loan_details,omitempty"`
	UserKycDetails      []*UserKycDetails    `protobuf:"bytes,5,rep,name=user_kyc_details,json=userKycDetails,proto3" json:"user_kyc_details,omitempty"`
	LoanId              string               `protobuf:"bytes,4,opt,name=loan_id,json=loanId,proto3" json:"loan_id,omitempty"`
}

func (x *UploadKycDetailsRequest) Reset() {
	*x = UploadKycDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadKycDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadKycDetailsRequest) ProtoMessage() {}

func (x *UploadKycDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadKycDetailsRequest.ProtoReflect.Descriptor instead.
func (*UploadKycDetailsRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{24}
}

func (x *UploadKycDetailsRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UploadKycDetailsRequest) GetUserPersonalDetails() *UserPersonalDetails {
	if x != nil {
		return x.UserPersonalDetails
	}
	return nil
}

func (x *UploadKycDetailsRequest) GetUserLoanDetails() *UserLoanDetails {
	if x != nil {
		return x.UserLoanDetails
	}
	return nil
}

func (x *UploadKycDetailsRequest) GetUserKycDetails() []*UserKycDetails {
	if x != nil {
		return x.UserKycDetails
	}
	return nil
}

func (x *UploadKycDetailsRequest) GetLoanId() string {
	if x != nil {
		return x.LoanId
	}
	return ""
}

type UploadKycDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UploadKycDetailsResponse) Reset() {
	*x = UploadKycDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadKycDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadKycDetailsResponse) ProtoMessage() {}

func (x *UploadKycDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadKycDetailsResponse.ProtoReflect.Descriptor instead.
func (*UploadKycDetailsResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{25}
}

func (x *UploadKycDetailsResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UploadDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UploadDocumentResponse) Reset() {
	*x = UploadDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentResponse) ProtoMessage() {}

func (x *UploadDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentResponse.ProtoReflect.Descriptor instead.
func (*UploadDocumentResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{26}
}

type BureauPullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BureauPullRequest) Reset() {
	*x = BureauPullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BureauPullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BureauPullRequest) ProtoMessage() {}

func (x *BureauPullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BureauPullRequest.ProtoReflect.Descriptor instead.
func (*BureauPullRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{27}
}

type BureauPullResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BureauPullResponse) Reset() {
	*x = BureauPullResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BureauPullResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BureauPullResponse) ProtoMessage() {}

func (x *BureauPullResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BureauPullResponse.ProtoReflect.Descriptor instead.
func (*BureauPullResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{28}
}

type GetLoanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata   *RequestMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	BorrowerId string           `protobuf:"bytes,2,opt,name=borrower_id,json=borrowerId,proto3" json:"borrower_id,omitempty"`
	LoanId     string           `protobuf:"bytes,3,opt,name=loan_id,json=loanId,proto3" json:"loan_id,omitempty"`
}

func (x *GetLoanRequest) Reset() {
	*x = GetLoanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoanRequest) ProtoMessage() {}

func (x *GetLoanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoanRequest.ProtoReflect.Descriptor instead.
func (*GetLoanRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{29}
}

func (x *GetLoanRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetLoanRequest) GetBorrowerId() string {
	if x != nil {
		return x.BorrowerId
	}
	return ""
}

func (x *GetLoanRequest) GetLoanId() string {
	if x != nil {
		return x.LoanId
	}
	return ""
}

type GetLoanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status LoanStatus `protobuf:"varint,1,opt,name=status,proto3,enum=rmnkmr.lsp.v1.LoanStatus" json:"status,omitempty"`
}

func (x *GetLoanResponse) Reset() {
	*x = GetLoanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoanResponse) ProtoMessage() {}

func (x *GetLoanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoanResponse.ProtoReflect.Descriptor instead.
func (*GetLoanResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{30}
}

func (x *GetLoanResponse) GetStatus() LoanStatus {
	if x != nil {
		return x.Status
	}
	return LoanStatus_PENDING
}

type RepaymentAllocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount            int64                   `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Principal         int64                   `protobuf:"varint,2,opt,name=principal,proto3" json:"principal,omitempty"`
	Interest          int64                   `protobuf:"varint,3,opt,name=interest,proto3" json:"interest,omitempty"`
	Type              RepaymentAllocationType `protobuf:"varint,4,opt,name=type,proto3,enum=rmnkmr.lsp.v1.RepaymentAllocationType" json:"type,omitempty"`
	InstallmentNumber int64                   `protobuf:"varint,5,opt,name=installment_number,json=installmentNumber,proto3" json:"installment_number,omitempty"`
	DueDate           string                  `protobuf:"bytes,6,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
}

func (x *RepaymentAllocation) Reset() {
	*x = RepaymentAllocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepaymentAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepaymentAllocation) ProtoMessage() {}

func (x *RepaymentAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepaymentAllocation.ProtoReflect.Descriptor instead.
func (*RepaymentAllocation) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{31}
}

func (x *RepaymentAllocation) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RepaymentAllocation) GetPrincipal() int64 {
	if x != nil {
		return x.Principal
	}
	return 0
}

func (x *RepaymentAllocation) GetInterest() int64 {
	if x != nil {
		return x.Interest
	}
	return 0
}

func (x *RepaymentAllocation) GetType() RepaymentAllocationType {
	if x != nil {
		return x.Type
	}
	return RepaymentAllocationType_INSTALLMENT
}

func (x *RepaymentAllocation) GetInstallmentNumber() int64 {
	if x != nil {
		return x.InstallmentNumber
	}
	return 0
}

func (x *RepaymentAllocation) GetDueDate() string {
	if x != nil {
		return x.DueDate
	}
	return ""
}

type SaveRepaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata               *RequestMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	RepaymentTransactionId string                 `protobuf:"bytes,2,opt,name=repayment_transaction_id,json=repaymentTransactionId,proto3" json:"repayment_transaction_id,omitempty"`
	PaymentDate            string                 `protobuf:"bytes,3,opt,name=payment_date,json=paymentDate,proto3" json:"payment_date,omitempty"`
	ReferenceId            string                 `protobuf:"bytes,4,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"` // any reference id at nbfc's end - against which repayment was made, eg - loan_id, lead_id
	ModeOfPayment          string                 `protobuf:"bytes,5,opt,name=mode_of_payment,json=modeOfPayment,proto3" json:"mode_of_payment,omitempty"`
	Allocations            []*RepaymentAllocation `protobuf:"bytes,6,rep,name=allocations,proto3" json:"allocations,omitempty"`
}

func (x *SaveRepaymentRequest) Reset() {
	*x = SaveRepaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRepaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRepaymentRequest) ProtoMessage() {}

func (x *SaveRepaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRepaymentRequest.ProtoReflect.Descriptor instead.
func (*SaveRepaymentRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{32}
}

func (x *SaveRepaymentRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SaveRepaymentRequest) GetRepaymentTransactionId() string {
	if x != nil {
		return x.RepaymentTransactionId
	}
	return ""
}

func (x *SaveRepaymentRequest) GetPaymentDate() string {
	if x != nil {
		return x.PaymentDate
	}
	return ""
}

func (x *SaveRepaymentRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *SaveRepaymentRequest) GetModeOfPayment() string {
	if x != nil {
		return x.ModeOfPayment
	}
	return ""
}

func (x *SaveRepaymentRequest) GetAllocations() []*RepaymentAllocation {
	if x != nil {
		return x.Allocations
	}
	return nil
}

type SaveRepaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveRepaymentResponse) Reset() {
	*x = SaveRepaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRepaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRepaymentResponse) ProtoMessage() {}

func (x *SaveRepaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRepaymentResponse.ProtoReflect.Descriptor instead.
func (*SaveRepaymentResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{33}
}

type LoanLimitStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata     *RequestMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	PartnerScore int64            `protobuf:"varint,2,opt,name=partner_score,json=partnerScore,proto3" json:"partner_score,omitempty"`
	NbfcLoanId   string           `protobuf:"bytes,3,opt,name=nbfc_loan_id,json=nbfcLoanId,proto3" json:"nbfc_loan_id,omitempty"`
	CompanyName  string           `protobuf:"bytes,4,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
}

func (x *LoanLimitStatusRequest) Reset() {
	*x = LoanLimitStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanLimitStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanLimitStatusRequest) ProtoMessage() {}

func (x *LoanLimitStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanLimitStatusRequest.ProtoReflect.Descriptor instead.
func (*LoanLimitStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{34}
}

func (x *LoanLimitStatusRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *LoanLimitStatusRequest) GetPartnerScore() int64 {
	if x != nil {
		return x.PartnerScore
	}
	return 0
}

func (x *LoanLimitStatusRequest) GetNbfcLoanId() string {
	if x != nil {
		return x.NbfcLoanId
	}
	return ""
}

func (x *LoanLimitStatusRequest) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

type LoanLimitStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess  bool   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	IsApproved bool   `protobuf:"varint,2,opt,name=is_approved,json=isApproved,proto3" json:"is_approved,omitempty"`
	MaxAmount  int64  `protobuf:"varint,3,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	Msg        string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	IsRejected bool   `protobuf:"varint,5,opt,name=is_rejected,json=isRejected,proto3" json:"is_rejected,omitempty"`
}

func (x *LoanLimitStatusResponse) Reset() {
	*x = LoanLimitStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanLimitStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanLimitStatusResponse) ProtoMessage() {}

func (x *LoanLimitStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanLimitStatusResponse.ProtoReflect.Descriptor instead.
func (*LoanLimitStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{35}
}

func (x *LoanLimitStatusResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *LoanLimitStatusResponse) GetIsApproved() bool {
	if x != nil {
		return x.IsApproved
	}
	return false
}

func (x *LoanLimitStatusResponse) GetMaxAmount() int64 {
	if x != nil {
		return x.MaxAmount
	}
	return 0
}

func (x *LoanLimitStatusResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoanLimitStatusResponse) GetIsRejected() bool {
	if x != nil {
		return x.IsRejected
	}
	return false
}

type DisbursalLoanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata        *RequestMetadata     `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	UserLoanDetail  *UserLoanDetails     `protobuf:"bytes,2,opt,name=user_loan_detail,json=userLoanDetail,proto3" json:"user_loan_detail,omitempty"`
	NbfcLeadId      string               `protobuf:"bytes,3,opt,name=nbfc_lead_id,json=nbfcLeadId,proto3" json:"nbfc_lead_id,omitempty"`
	LoanAgreementId string               `protobuf:"bytes,4,opt,name=loan_agreement_id,json=loanAgreementId,proto3" json:"loan_agreement_id,omitempty"`
	Merchant        *UserPersonalDetails `protobuf:"bytes,5,opt,name=merchant,proto3" json:"merchant,omitempty"`
	Documents       []*Document          `protobuf:"bytes,6,rep,name=documents,proto3" json:"documents,omitempty"`
	UserKycDetail   []*UserKycDetails    `protobuf:"bytes,8,rep,name=user_kyc_detail,json=userKycDetail,proto3" json:"user_kyc_detail,omitempty"`
}

func (x *DisbursalLoanRequest) Reset() {
	*x = DisbursalLoanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisbursalLoanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisbursalLoanRequest) ProtoMessage() {}

func (x *DisbursalLoanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisbursalLoanRequest.ProtoReflect.Descriptor instead.
func (*DisbursalLoanRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{36}
}

func (x *DisbursalLoanRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DisbursalLoanRequest) GetUserLoanDetail() *UserLoanDetails {
	if x != nil {
		return x.UserLoanDetail
	}
	return nil
}

func (x *DisbursalLoanRequest) GetNbfcLeadId() string {
	if x != nil {
		return x.NbfcLeadId
	}
	return ""
}

func (x *DisbursalLoanRequest) GetLoanAgreementId() string {
	if x != nil {
		return x.LoanAgreementId
	}
	return ""
}

func (x *DisbursalLoanRequest) GetMerchant() *UserPersonalDetails {
	if x != nil {
		return x.Merchant
	}
	return nil
}

func (x *DisbursalLoanRequest) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *DisbursalLoanRequest) GetUserKycDetail() []*UserKycDetails {
	if x != nil {
		return x.UserKycDetail
	}
	return nil
}

type DisbursalLoanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status            bool          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ApplicationStatus string        `protobuf:"bytes,2,opt,name=application_status,json=applicationStatus,proto3" json:"application_status,omitempty"`
	Result            *StatusResult `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DisbursalLoanResponse) Reset() {
	*x = DisbursalLoanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisbursalLoanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisbursalLoanResponse) ProtoMessage() {}

func (x *DisbursalLoanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisbursalLoanResponse.ProtoReflect.Descriptor instead.
func (*DisbursalLoanResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{37}
}

func (x *DisbursalLoanResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DisbursalLoanResponse) GetApplicationStatus() string {
	if x != nil {
		return x.ApplicationStatus
	}
	return ""
}

func (x *DisbursalLoanResponse) GetResult() *StatusResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreateRepaymentScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Checksum string `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Date     string `protobuf:"bytes,5,opt,name=Date,proto3" json:"Date,omitempty"`
}

func (x *CreateRepaymentScheduleResponse) Reset() {
	*x = CreateRepaymentScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRepaymentScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepaymentScheduleResponse) ProtoMessage() {}

func (x *CreateRepaymentScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepaymentScheduleResponse.ProtoReflect.Descriptor instead.
func (*CreateRepaymentScheduleResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{38}
}

func (x *CreateRepaymentScheduleResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateRepaymentScheduleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateRepaymentScheduleResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateRepaymentScheduleResponse) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *CreateRepaymentScheduleResponse) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type CreateLoanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata            *RequestMetadata     `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	UserPersonalDetails *UserPersonalDetails `protobuf:"bytes,2,opt,name=user_personal_details,json=userPersonalDetails,proto3" json:"user_personal_details,omitempty"`
	UserLoanDetails     *UserLoanDetails     `protobuf:"bytes,3,opt,name=user_loan_details,json=userLoanDetails,proto3" json:"user_loan_details,omitempty"`
	UserKycDetails      []*UserKycDetails    `protobuf:"bytes,4,rep,name=user_kyc_details,json=userKycDetails,proto3" json:"user_kyc_details,omitempty"`
	UserBankDetails     *UserBankDetails     `protobuf:"bytes,6,opt,name=user_bank_details,json=userBankDetails,proto3" json:"user_bank_details,omitempty"`
	Documents           []*Document          `protobuf:"bytes,7,rep,name=documents,proto3" json:"documents,omitempty"`
	RepaymentSchedule   []*RepaymentSchedule `protobuf:"bytes,8,rep,name=repaymentSchedule,proto3" json:"repaymentSchedule,omitempty"`
}

func (x *CreateLoanRequest) Reset() {
	*x = CreateLoanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLoanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoanRequest) ProtoMessage() {}

func (x *CreateLoanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLoanRequest.ProtoReflect.Descriptor instead.
func (*CreateLoanRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{39}
}

func (x *CreateLoanRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateLoanRequest) GetUserPersonalDetails() *UserPersonalDetails {
	if x != nil {
		return x.UserPersonalDetails
	}
	return nil
}

func (x *CreateLoanRequest) GetUserLoanDetails() *UserLoanDetails {
	if x != nil {
		return x.UserLoanDetails
	}
	return nil
}

func (x *CreateLoanRequest) GetUserKycDetails() []*UserKycDetails {
	if x != nil {
		return x.UserKycDetails
	}
	return nil
}

func (x *CreateLoanRequest) GetUserBankDetails() *UserBankDetails {
	if x != nil {
		return x.UserBankDetails
	}
	return nil
}

func (x *CreateLoanRequest) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *CreateLoanRequest) GetRepaymentSchedule() []*RepaymentSchedule {
	if x != nil {
		return x.RepaymentSchedule
	}
	return nil
}

type RepaymentSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstalmentNumber int64   `protobuf:"varint,1,opt,name=instalment_number,json=instalmentNumber,proto3" json:"instalment_number,omitempty"`
	DueDate          int64   `protobuf:"varint,2,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	DueAmount        float32 `protobuf:"fixed32,3,opt,name=due_amount,json=dueAmount,proto3" json:"due_amount,omitempty"`
	PrincipalAmount  float32 `protobuf:"fixed32,4,opt,name=principal_amount,json=principalAmount,proto3" json:"principal_amount,omitempty"`
	InterestAmount   float32 `protobuf:"fixed32,5,opt,name=interest_amount,json=interestAmount,proto3" json:"interest_amount,omitempty"`
}

func (x *RepaymentSchedule) Reset() {
	*x = RepaymentSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepaymentSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepaymentSchedule) ProtoMessage() {}

func (x *RepaymentSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepaymentSchedule.ProtoReflect.Descriptor instead.
func (*RepaymentSchedule) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{40}
}

func (x *RepaymentSchedule) GetInstalmentNumber() int64 {
	if x != nil {
		return x.InstalmentNumber
	}
	return 0
}

func (x *RepaymentSchedule) GetDueDate() int64 {
	if x != nil {
		return x.DueDate
	}
	return 0
}

func (x *RepaymentSchedule) GetDueAmount() float32 {
	if x != nil {
		return x.DueAmount
	}
	return 0
}

func (x *RepaymentSchedule) GetPrincipalAmount() float32 {
	if x != nil {
		return x.PrincipalAmount
	}
	return 0
}

func (x *RepaymentSchedule) GetInterestAmount() float32 {
	if x != nil {
		return x.InterestAmount
	}
	return 0
}

type CreateLoanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NbfcLeadId      string            `protobuf:"bytes,1,opt,name=nbfc_lead_id,json=nbfcLeadId,proto3" json:"nbfc_lead_id,omitempty"`
	NbfcLoanId      string            `protobuf:"bytes,2,opt,name=nbfc_loan_id,json=nbfcLoanId,proto3" json:"nbfc_loan_id,omitempty"`
	NbfcBorrowerId  string            `protobuf:"bytes,3,opt,name=nbfc_borrower_id,json=nbfcBorrowerId,proto3" json:"nbfc_borrower_id,omitempty"`
	Status          string            `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	RejectionReason map[string]string `protobuf:"bytes,5,rep,name=rejection_reason,json=rejectionReason,proto3" json:"rejection_reason,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsSuccess       bool              `protobuf:"varint,6,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
}

func (x *CreateLoanResponse) Reset() {
	*x = CreateLoanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLoanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoanResponse) ProtoMessage() {}

func (x *CreateLoanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLoanResponse.ProtoReflect.Descriptor instead.
func (*CreateLoanResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{41}
}

func (x *CreateLoanResponse) GetNbfcLeadId() string {
	if x != nil {
		return x.NbfcLeadId
	}
	return ""
}

func (x *CreateLoanResponse) GetNbfcLoanId() string {
	if x != nil {
		return x.NbfcLoanId
	}
	return ""
}

func (x *CreateLoanResponse) GetNbfcBorrowerId() string {
	if x != nil {
		return x.NbfcBorrowerId
	}
	return ""
}

func (x *CreateLoanResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateLoanResponse) GetRejectionReason() map[string]string {
	if x != nil {
		return x.RejectionReason
	}
	return nil
}

func (x *CreateLoanResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type APISuccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *APISuccessResponse) Reset() {
	*x = APISuccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APISuccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APISuccessResponse) ProtoMessage() {}

func (x *APISuccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APISuccessResponse.ProtoReflect.Descriptor instead.
func (*APISuccessResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{42}
}

func (x *APISuccessResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *APISuccessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PaymentUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata   *RequestMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	NbfcLeadId string           `protobuf:"bytes,2,opt,name=nbfc_lead_id,json=nbfcLeadId,proto3" json:"nbfc_lead_id,omitempty"`
	Amount     float32          `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *PaymentUrlRequest) Reset() {
	*x = PaymentUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentUrlRequest) ProtoMessage() {}

func (x *PaymentUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentUrlRequest.ProtoReflect.Descriptor instead.
func (*PaymentUrlRequest) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{43}
}

func (x *PaymentUrlRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PaymentUrlRequest) GetNbfcLeadId() string {
	if x != nil {
		return x.NbfcLeadId
	}
	return ""
}

func (x *PaymentUrlRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type PaymentUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	RepaymentUrl string `protobuf:"bytes,2,opt,name=repayment_url,json=repaymentUrl,proto3" json:"repayment_url,omitempty"`
}

func (x *PaymentUrlResponse) Reset() {
	*x = PaymentUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentUrlResponse) ProtoMessage() {}

func (x *PaymentUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentUrlResponse.ProtoReflect.Descriptor instead.
func (*PaymentUrlResponse) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{44}
}

func (x *PaymentUrlResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *PaymentUrlResponse) GetRepaymentUrl() string {
	if x != nil {
		return x.RepaymentUrl
	}
	return ""
}

type CreateRepaymentScheduleResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanId string `protobuf:"bytes,1,opt,name=LoanId,proto3" json:"LoanId,omitempty"`
}

func (x *CreateRepaymentScheduleResponse_Data) Reset() {
	*x = CreateRepaymentScheduleResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lsp_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRepaymentScheduleResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepaymentScheduleResponse_Data) ProtoMessage() {}

func (x *CreateRepaymentScheduleResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lsp_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepaymentScheduleResponse_Data.ProtoReflect.Descriptor instead.
func (*CreateRepaymentScheduleResponse_Data) Descriptor() ([]byte, []int) {
	return file_proto_lsp_proto_rawDescGZIP(), []int{38, 0}
}

func (x *CreateRepaymentScheduleResponse_Data) GetLoanId() string {
	if x != nil {
		return x.LoanId
	}
	return ""
}

var File_proto_lsp_proto protoreflect.FileDescriptor

var file_proto_lsp_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e,
	0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a,
	0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x35, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xe7,
	0x01, 0x0a, 0x14, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5c, 0x0a, 0x15, 0x4c, 0x6f, 0x61, 0x6e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e,
	0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22, 0x64, 0x0a, 0x13, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x14,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x6e, 0x49, 0x64, 0x22, 0xf4, 0x03,
	0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x61, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x6f, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x62,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x74, 0x68, 0x65, 0x72, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x64, 0x64, 0x72, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x4e, 0x62, 0x66, 0x63,
	0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x4e, 0x62, 0x66, 0x63, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xae, 0x06, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x61,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6c, 0x6f, 0x61, 0x6e, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x74, 0x65,
	0x6e, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x61, 0x6e,
	0x54, 0x65, 0x6e, 0x75, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x6c, 0x6f, 0x61, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x15,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x3a, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x66,
	0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x17, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x46,
	0x65, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x67,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x47, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x1d, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x67, 0x73, 0x74,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x1a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65,
	0x47, 0x73, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x62, 0x66, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x62, 0x66,
	0x63, 0x12, 0x5a, 0x0a, 0x15, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x38, 0x0a,
	0x18, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x16, 0x6c, 0x6f, 0x61, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12,
	0x47, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x6b, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x65, 0x6d, 0x69, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x45, 0x6d, 0x69, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x79,
	0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0xfd, 0x02, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x4e,
	0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x66, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x66, 0x73, 0x63, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x70, 0x69, 0x5f, 0x76, 0x70, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x70, 0x69, 0x56, 0x70, 0x61, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x18,
	0x70, 0x61, 0x6e, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x69,
	0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15,
	0x70, 0x61, 0x6e, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x69, 0x6d, 0x69, 0x6c,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6f, 0x6b,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x41, 0x56, 0x49, 0x4e, 0x47, 0x53,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x22,
	0xb7, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x64, 0x75, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x5f, 0x64,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69,
	0x70, 0x61, 0x6c, 0x44, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x75, 0x65, 0x22, 0xf7, 0x0a, 0x0a, 0x11, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x75, 0x72, 0x65, 0x61, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6f, 0x6b, 0x63, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6f, 0x6b, 0x63, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x12,
	0x61, 0x76, 0x67, 0x5f, 0x33, 0x5f, 0x6d, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x78, 0x6e, 0x5f, 0x61,
	0x6d, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x61, 0x76, 0x67, 0x33, 0x4d, 0x6e,
	0x74, 0x73, 0x54, 0x78, 0x6e, 0x41, 0x6d, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x34, 0x0a, 0x17, 0x61, 0x76, 0x67, 0x5f, 0x33, 0x5f, 0x6d, 0x6e, 0x74, 0x73,
	0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x13, 0x61, 0x76, 0x67, 0x33, 0x4d, 0x6e, 0x74, 0x73, 0x41, 0x70, 0x70,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x64, 0x61, 0x79, 0x73,
	0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x64, 0x61, 0x79, 0x73, 0x53, 0x69,
	0x6e, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3e, 0x0a,
	0x1c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x33, 0x30, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x33, 0x30, 0x44, 0x61, 0x79, 0x73, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x65, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x35, 0x0a,
	0x17, 0x6d, 0x6e, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x61, 0x67, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14,
	0x6d, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x61, 0x67, 0x31, 0x12, 0x35, 0x0a, 0x17, 0x6d, 0x6e, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x61, 0x67, 0x32, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6d, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x61, 0x67, 0x32, 0x12, 0x35, 0x0a, 0x17, 0x6d,
	0x6e, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6c, 0x61, 0x67, 0x33, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6d, 0x6e,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x61,
	0x67, 0x33, 0x12, 0x27, 0x0a, 0x10, 0x6d, 0x6e, 0x74, 0x5f, 0x74, 0x78, 0x6e, 0x5f, 0x61, 0x6d,
	0x74, 0x5f, 0x6c, 0x61, 0x67, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x6d, 0x6e,
	0x74, 0x54, 0x78, 0x6e, 0x41, 0x6d, 0x74, 0x4c, 0x61, 0x67, 0x31, 0x12, 0x27, 0x0a, 0x10, 0x6d,
	0x6e, 0x74, 0x5f, 0x74, 0x78, 0x6e, 0x5f, 0x61, 0x6d, 0x74, 0x5f, 0x6c, 0x61, 0x67, 0x32, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x6d, 0x6e, 0x74, 0x54, 0x78, 0x6e, 0x41, 0x6d, 0x74,
	0x4c, 0x61, 0x67, 0x32, 0x12, 0x27, 0x0a, 0x10, 0x6d, 0x6e, 0x74, 0x5f, 0x74, 0x78, 0x6e, 0x5f,
	0x61, 0x6d, 0x74, 0x5f, 0x6c, 0x61, 0x67, 0x33, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d,
	0x6d, 0x6e, 0x74, 0x54, 0x78, 0x6e, 0x41, 0x6d, 0x74, 0x4c, 0x61, 0x67, 0x33, 0x12, 0x2a, 0x0a,
	0x10, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x77, 0x72, 0x69,
	0x74, 0x74, 0x65, 0x6e, 0x6f, 0x66, 0x66, 0x5f, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x77, 0x72, 0x69, 0x74, 0x74, 0x65,
	0x6e, 0x6f, 0x66, 0x66, 0x4f, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a,
	0x15, 0x64, 0x70, 0x64, 0x5f, 0x69, 0x6e, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x31, 0x32, 0x5f,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x64, 0x70,
	0x64, 0x49, 0x6e, 0x4c, 0x61, 0x73, 0x74, 0x31, 0x32, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x12,
	0x3b, 0x0a, 0x1a, 0x63, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x6e,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x17, 0x63, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x6e,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63,
	0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63,
	0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x10,
	0x77, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x66, 0x5f, 0x77, 0x64,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x77, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x64, 0x53, 0x66, 0x57, 0x64, 0x12, 0x3d, 0x0a, 0x1c, 0x6e, 0x75, 0x6d, 0x5f, 0x33, 0x30, 0x70,
	0x6c, 0x75, 0x73, 0x5f, 0x64, 0x70, 0x64, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x33, 0x5f, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x6e, 0x75, 0x6d,
	0x33, 0x30, 0x70, 0x6c, 0x75, 0x73, 0x44, 0x70, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x33, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x73, 0x12, 0x3f, 0x0a, 0x1d, 0x6e, 0x75, 0x6d, 0x5f, 0x39, 0x30, 0x70, 0x6c,
	0x75, 0x73, 0x5f, 0x64, 0x70, 0x64, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x31, 0x32, 0x5f, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x6e, 0x75, 0x6d,
	0x39, 0x30, 0x70, 0x6c, 0x75, 0x73, 0x44, 0x70, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x31, 0x32, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x72, 0x65,
	0x61, 0x75, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6f, 0x69, 0x72, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6f, 0x69, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x74, 0x63, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x74, 0x63, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x75, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x76,
	0x65, 0x72, 0x64, 0x75, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75,
	0x72, 0x65, 0x61, 0x75, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x37, 0x0a,
	0x18, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x62, 0x75, 0x72, 0x65, 0x61,
	0x75, 0x5f, 0x33, 0x30, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x15, 0x65, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x69, 0x65, 0x73, 0x42, 0x75, 0x72, 0x65, 0x61, 0x75,
	0x33, 0x30, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x72,
	0x65, 0x61, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x6c, 0x79, 0x5f, 0x65, 0x6d, 0x69, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x6c, 0x79, 0x45, 0x6d, 0x69, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x65, 0x22, 0xcd, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6b,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x58, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x13, 0x75, 0x73,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x4c, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f,
	0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f,
	0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x52, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x72, 0x65, 0x61, 0x75, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f,
	0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x75, 0x72, 0x65, 0x61, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x42, 0x75, 0x72, 0x65, 0x61, 0x75, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0xe6, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x62,
	0x66, 0x63, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6e, 0x62, 0x66, 0x63, 0x4c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x6e, 0x62, 0x66, 0x63, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x62, 0x66, 0x63, 0x4c, 0x6f, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x6e, 0x62, 0x66, 0x63, 0x5f, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x62, 0x66, 0x63, 0x42, 0x6f,
	0x72, 0x72, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x63, 0x0a, 0x10, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6f, 0x6b, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x1a, 0x42, 0x0a, 0x14, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x78, 0x0a, 0x16,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x62, 0x66, 0x63, 0x5f, 0x6c, 0x65, 0x61,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x62, 0x66, 0x63,
	0x4c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0xef, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x4c, 0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x61, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16,
	0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x44, 0x45,
	0x52, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08,
	0x45, 0x4c, 0x49, 0x47, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45,
	0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x07, 0x22, 0x66, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x22, 0xe2, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x4e, 0x0a, 0x0d, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f,
	0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x8a, 0x02, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x65,
	0x6e, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x54, 0x65, 0x6e, 0x75,
	0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x6f, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x52, 0x6f, 0x69, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x11, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6d, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x45, 0x6d, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x70, 0x64, 0x63, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x53, 0x70, 0x64, 0x63, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x44,
	0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x46, 0x69, 0x72, 0x73, 0x74, 0x45, 0x6d, 0x69, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x69, 0x72, 0x73, 0x74, 0x45, 0x6d, 0x69, 0x44, 0x61,
	0x74, 0x65, 0x22, 0xcd, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x4d, 0x49, 0x54, 0x65, 0x6e, 0x75,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x4d, 0x49, 0x54, 0x65, 0x6e,
	0x75, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x4d, 0x49, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x4d, 0x49, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x61, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x61, 0x6e, 0x49, 0x44, 0x12, 0x4e, 0x0a, 0x0f, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e,
	0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x22, 0x8f,
	0x01, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x31, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6f, 0x6b,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x22, 0xfd, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f,
	0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x58, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x13, 0x75,
	0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x4c, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x0f, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0xe3, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x79, 0x63, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x58, 0x0a, 0x15, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x6b, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x13, 0x75, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x4c, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x61,
	0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x49, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6b, 0x79, 0x63, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f,
	0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4b, 0x79, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x4b, 0x79, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x6f, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x18, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x4b, 0x79, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x42, 0x75, 0x72, 0x65, 0x61, 0x75, 0x50, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x42, 0x75, 0x72,
	0x65, 0x61, 0x75, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x88, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e,
	0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xef, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6f, 0x6b, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x75, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x22, 0xc4, 0x02, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x18, 0x72,
	0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x72,
	0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6d,
	0x6f, 0x64, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x4f, 0x66, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x16, 0x4c, 0x6f, 0x61, 0x6e, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x62, 0x66, 0x63, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x62, 0x66, 0x63, 0x4c, 0x6f,
	0x61, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x17, 0x4c, 0x6f, 0x61, 0x6e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xb2, 0x03, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72,
	0x73, 0x61, 0x6c, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x10,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x61,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f,
	0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x62, 0x66, 0x63,
	0x5f, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x62, 0x66, 0x63, 0x4c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f,
	0x61, 0x6e, 0x5f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x61, 0x6e, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x08,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6b,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x47, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6b, 0x79, 0x63, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6b, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4b, 0x79, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x4b, 0x79, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x95, 0x01, 0x0a, 0x15, 0x44,
	0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x61, 0x6c, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x12,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6b,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x1a, 0x1e, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x9d, 0x04, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e,
	0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x58, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4c, 0x0a, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x61, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x61,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x49, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6b, 0x79, 0x63, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x79, 0x63, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x4b, 0x79, 0x63, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x4c, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x37, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e,
	0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x50, 0x0a, 0x11, 0x72, 0x65,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x11, 0x72, 0x65, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0xce, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x75,
	0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x64, 0x75, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x69,
	0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe2, 0x02,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x62, 0x66, 0x63, 0x5f, 0x6c, 0x65, 0x61,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x62, 0x66, 0x63,
	0x4c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x62, 0x66, 0x63, 0x5f, 0x6c,
	0x6f, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x62,
	0x66, 0x63, 0x4c, 0x6f, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x62, 0x66, 0x63,
	0x5f, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6e, 0x62, 0x66, 0x63, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x63, 0x0a, 0x10, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e,
	0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f,
	0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x42,
	0x0a, 0x14, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x46, 0x0a, 0x12, 0x41, 0x50, 0x49, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20,
	0x0a, 0x0c, 0x6e, 0x62, 0x66, 0x63, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x62, 0x66, 0x63, 0x4c, 0x65, 0x61, 0x64, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x2a, 0x25, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x41, 0x53, 0x48, 0x46, 0x49, 0x4e,
	0x10, 0x01, 0x2a, 0x50, 0x0a, 0x0a, 0x4c, 0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x49, 0x53,
	0x42, 0x55, 0x52, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50, 0x52,
	0x4f, 0x56, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54,
	0x45, 0x44, 0x10, 0x04, 0x2a, 0xbb, 0x01, 0x0a, 0x0c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x41, 0x44, 0x48, 0x41, 0x41, 0x52,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x4c, 0x46, 0x49, 0x45, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x50, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x49, 0x47, 0x4e, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x52, 0x49, 0x56, 0x49, 0x4e,
	0x47, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x41,
	0x41, 0x44, 0x48, 0x41, 0x41, 0x52, 0x5f, 0x5a, 0x49, 0x50, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17,
	0x55, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x5f, 0x4c, 0x4f, 0x41, 0x4e, 0x5f, 0x41, 0x47,
	0x52, 0x45, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x49, 0x47,
	0x4e, 0x45, 0x44, 0x5f, 0x4c, 0x4f, 0x41, 0x4e, 0x5f, 0x41, 0x47, 0x52, 0x45, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x46, 0x53, 0x10, 0x08, 0x12, 0x08, 0x0a,
	0x04, 0x4f, 0x4b, 0x59, 0x43, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52,
	0x10, 0x0a, 0x2a, 0x3a, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x41,
	0x49, 0x4c, 0x59, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x45, 0x4b, 0x4c, 0x59, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x4c, 0x59, 0x10, 0x02, 0x2a, 0x1e,
	0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x4c, 0x45,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x2a, 0x37,
	0x0a, 0x17, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x53,
	0x54, 0x41, 0x4c, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45,
	0x4e, 0x41, 0x4c, 0x54, 0x59, 0x10, 0x01, 0x32, 0xe3, 0x0a, 0x0a, 0x03, 0x41, 0x50, 0x49, 0x12,
	0x60, 0x0a, 0x0d, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x25, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5d, 0x0a, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61,
	0x6e, 0x12, 0x24, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x7e, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x6f, 0x6b,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6f,
	0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x57, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x12, 0x22,
	0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0f, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x6f,
	0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e,
	0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x57, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x12, 0x22, 0x2e,
	0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0a, 0x42, 0x75, 0x72, 0x65,
	0x61, 0x75, 0x50, 0x75, 0x6c, 0x6c, 0x12, 0x22, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x72, 0x65, 0x61, 0x75, 0x50,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x6b, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x72,
	0x65, 0x61, 0x75, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x12, 0x1f, 0x2e, 0x6f,
	0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x60, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x25, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x6b, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x61, 0x6e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x2e, 0x6f, 0x6b,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x61, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e,
	0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5f, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x6f, 0x61, 0x6e,
	0x12, 0x25, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x61, 0x6c, 0x4c, 0x6f, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x62, 0x75, 0x72,
	0x73, 0x61, 0x6c, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x61, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e,
	0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x61, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0a, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x6b,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x69, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x28, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4b,
	0x79, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x6f, 0x6b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x6c, 0x73, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x79, 0x63, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x23, 0x5a,
	0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6b, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x2f, 0x6c, 0x73, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x6c,
	0x73, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_lsp_proto_rawDescOnce sync.Once
	file_proto_lsp_proto_rawDescData = file_proto_lsp_proto_rawDesc
)

func file_proto_lsp_proto_rawDescGZIP() []byte {
	file_proto_lsp_proto_rawDescOnce.Do(func() {
		file_proto_lsp_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_lsp_proto_rawDescData)
	})
	return file_proto_lsp_proto_rawDescData
}

var file_proto_lsp_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_proto_lsp_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_proto_lsp_proto_goTypes = []interface{}{
	(Provider)(0),                                // 0: rmnkmr.lsp.v1.Provider
	(LoanStatus)(0),                              // 1: rmnkmr.lsp.v1.LoanStatus
	(DocumentType)(0),                            // 2: rmnkmr.lsp.v1.DocumentType
	(InstallmentFrequency)(0),                    // 3: rmnkmr.lsp.v1.InstallmentFrequency
	(Gender)(0),                                  // 4: rmnkmr.lsp.v1.Gender
	(RepaymentAllocationType)(0),                 // 5: rmnkmr.lsp.v1.RepaymentAllocationType
	(UserBankDetails_AccountType)(0),             // 6: rmnkmr.lsp.v1.UserBankDetails.AccountType
	(CheckLoanStatusResponse_Status)(0),          // 7: rmnkmr.lsp.v1.CheckLoanStatusResponse.Status
	(*RequestMetadata)(nil),                      // 8: rmnkmr.lsp.v1.RequestMetadata
	(*LoanProvidersRequest)(nil),                 // 9: rmnkmr.lsp.v1.LoanProvidersRequest
	(*ProviderConfig)(nil),                       // 10: rmnkmr.lsp.v1.ProviderConfig
	(*LoanProviderResponse)(nil),                 // 11: rmnkmr.lsp.v1.LoanProviderResponse
	(*LoanProvidersResponse)(nil),                // 12: rmnkmr.lsp.v1.LoanProvidersResponse
	(*InitiateLoanRequest)(nil),                  // 13: rmnkmr.lsp.v1.InitiateLoanRequest
	(*InitiateLoanResponse)(nil),                 // 14: rmnkmr.lsp.v1.InitiateLoanResponse
	(*UserPersonalDetails)(nil),                  // 15: rmnkmr.lsp.v1.UserPersonalDetails
	(*UserLoanDetails)(nil),                      // 16: rmnkmr.lsp.v1.UserLoanDetails
	(*UserKycDetails)(nil),                       // 17: rmnkmr.lsp.v1.UserKycDetails
	(*UserBankDetails)(nil),                      // 18: rmnkmr.lsp.v1.UserBankDetails
	(*Installment)(nil),                          // 19: rmnkmr.lsp.v1.Installment
	(*UserBureauDetails)(nil),                    // 20: rmnkmr.lsp.v1.UserBureauDetails
	(*CreateLeadRequest)(nil),                    // 21: rmnkmr.lsp.v1.CreateLeadRequest
	(*CreateLeadResponse)(nil),                   // 22: rmnkmr.lsp.v1.CreateLeadResponse
	(*CheckLoanStatusRequest)(nil),               // 23: rmnkmr.lsp.v1.CheckLoanStatusRequest
	(*CheckLoanStatusResponse)(nil),              // 24: rmnkmr.lsp.v1.CheckLoanStatusResponse
	(*CheckStatusResponse)(nil),                  // 25: rmnkmr.lsp.v1.CheckStatusResponse
	(*StatusResult)(nil),                         // 26: rmnkmr.lsp.v1.StatusResult
	(*StatusResultOfferDetails)(nil),             // 27: rmnkmr.lsp.v1.StatusResultOfferDetails
	(*CreateRepaymentScheduleRequest)(nil),       // 28: rmnkmr.lsp.v1.CreateRepaymentScheduleRequest
	(*PaymentScheduleData)(nil),                  // 29: rmnkmr.lsp.v1.PaymentScheduleData
	(*Document)(nil),                             // 30: rmnkmr.lsp.v1.Document
	(*UploadDocumentRequest)(nil),                // 31: rmnkmr.lsp.v1.UploadDocumentRequest
	(*UploadKycDetailsRequest)(nil),              // 32: rmnkmr.lsp.v1.UploadKycDetailsRequest
	(*UploadKycDetailsResponse)(nil),             // 33: rmnkmr.lsp.v1.UploadKycDetailsResponse
	(*UploadDocumentResponse)(nil),               // 34: rmnkmr.lsp.v1.UploadDocumentResponse
	(*BureauPullRequest)(nil),                    // 35: rmnkmr.lsp.v1.BureauPullRequest
	(*BureauPullResponse)(nil),                   // 36: rmnkmr.lsp.v1.BureauPullResponse
	(*GetLoanRequest)(nil),                       // 37: rmnkmr.lsp.v1.GetLoanRequest
	(*GetLoanResponse)(nil),                      // 38: rmnkmr.lsp.v1.GetLoanResponse
	(*RepaymentAllocation)(nil),                  // 39: rmnkmr.lsp.v1.RepaymentAllocation
	(*SaveRepaymentRequest)(nil),                 // 40: rmnkmr.lsp.v1.SaveRepaymentRequest
	(*SaveRepaymentResponse)(nil),                // 41: rmnkmr.lsp.v1.SaveRepaymentResponse
	(*LoanLimitStatusRequest)(nil),               // 42: rmnkmr.lsp.v1.LoanLimitStatusRequest
	(*LoanLimitStatusResponse)(nil),              // 43: rmnkmr.lsp.v1.LoanLimitStatusResponse
	(*DisbursalLoanRequest)(nil),                 // 44: rmnkmr.lsp.v1.DisbursalLoanRequest
	(*DisbursalLoanResponse)(nil),                // 45: rmnkmr.lsp.v1.DisbursalLoanResponse
	(*CreateRepaymentScheduleResponse)(nil),      // 46: rmnkmr.lsp.v1.CreateRepaymentScheduleResponse
	(*CreateLoanRequest)(nil),                    // 47: rmnkmr.lsp.v1.CreateLoanRequest
	(*RepaymentSchedule)(nil),                    // 48: rmnkmr.lsp.v1.RepaymentSchedule
	(*CreateLoanResponse)(nil),                   // 49: rmnkmr.lsp.v1.CreateLoanResponse
	(*APISuccessResponse)(nil),                   // 50: rmnkmr.lsp.v1.APISuccessResponse
	(*PaymentUrlRequest)(nil),                    // 51: rmnkmr.lsp.v1.PaymentUrlRequest
	(*PaymentUrlResponse)(nil),                   // 52: rmnkmr.lsp.v1.PaymentUrlResponse
	nil,                                          // 53: rmnkmr.lsp.v1.CreateLeadResponse.RejectionReasonEntry
	(*CreateRepaymentScheduleResponse_Data)(nil), // 54: rmnkmr.lsp.v1.CreateRepaymentScheduleResponse.Data
	nil, // 55: rmnkmr.lsp.v1.CreateLoanResponse.RejectionReasonEntry
}
var file_proto_lsp_proto_depIdxs = []int32{
	0,  // 0: rmnkmr.lsp.v1.RequestMetadata.provider:type_name -> rmnkmr.lsp.v1.Provider
	10, // 1: rmnkmr.lsp.v1.LoanProviderResponse.provider_config:type_name -> rmnkmr.lsp.v1.ProviderConfig
	11, // 2: rmnkmr.lsp.v1.LoanProvidersResponse.providers:type_name -> rmnkmr.lsp.v1.LoanProviderResponse
	0,  // 3: rmnkmr.lsp.v1.InitiateLoanRequest.provider:type_name -> rmnkmr.lsp.v1.Provider
	3,  // 4: rmnkmr.lsp.v1.UserLoanDetails.installment_frequency:type_name -> rmnkmr.lsp.v1.InstallmentFrequency
	19, // 5: rmnkmr.lsp.v1.UserLoanDetails.Installment_data:type_name -> rmnkmr.lsp.v1.Installment
	6,  // 6: rmnkmr.lsp.v1.UserBankDetails.account_type:type_name -> rmnkmr.lsp.v1.UserBankDetails.AccountType
	8,  // 7: rmnkmr.lsp.v1.CreateLeadRequest.metadata:type_name -> rmnkmr.lsp.v1.RequestMetadata
	15, // 8: rmnkmr.lsp.v1.CreateLeadRequest.user_personal_details:type_name -> rmnkmr.lsp.v1.UserPersonalDetails
	16, // 9: rmnkmr.lsp.v1.CreateLeadRequest.user_loan_details:type_name -> rmnkmr.lsp.v1.UserLoanDetails
	20, // 10: rmnkmr.lsp.v1.CreateLeadRequest.user_bureau_details:type_name -> rmnkmr.lsp.v1.UserBureauDetails
	53, // 11: rmnkmr.lsp.v1.CreateLeadResponse.rejection_reason:type_name -> rmnkmr.lsp.v1.CreateLeadResponse.RejectionReasonEntry
	8,  // 12: rmnkmr.lsp.v1.CheckLoanStatusRequest.metadata:type_name -> rmnkmr.lsp.v1.RequestMetadata
	7,  // 13: rmnkmr.lsp.v1.CheckLoanStatusResponse.status:type_name -> rmnkmr.lsp.v1.CheckLoanStatusResponse.Status
	26, // 14: rmnkmr.lsp.v1.CheckStatusResponse.results:type_name -> rmnkmr.lsp.v1.StatusResult
	27, // 15: rmnkmr.lsp.v1.StatusResult.offer_details:type_name -> rmnkmr.lsp.v1.StatusResultOfferDetails
	29, // 16: rmnkmr.lsp.v1.CreateRepaymentScheduleRequest.PaymentSchedule:type_name -> rmnkmr.lsp.v1.PaymentScheduleData
	0,  // 17: rmnkmr.lsp.v1.CreateRepaymentScheduleRequest.provider:type_name -> rmnkmr.lsp.v1.Provider
	2,  // 18: rmnkmr.lsp.v1.Document.type:type_name -> rmnkmr.lsp.v1.DocumentType
	8,  // 19: rmnkmr.lsp.v1.UploadDocumentRequest.metadata:type_name -> rmnkmr.lsp.v1.RequestMetadata
	15, // 20: rmnkmr.lsp.v1.UploadDocumentRequest.user_personal_details:type_name -> rmnkmr.lsp.v1.UserPersonalDetails
	16, // 21: rmnkmr.lsp.v1.UploadDocumentRequest.user_loan_details:type_name -> rmnkmr.lsp.v1.UserLoanDetails
	8,  // 22: rmnkmr.lsp.v1.UploadKycDetailsRequest.metadata:type_name -> rmnkmr.lsp.v1.RequestMetadata
	15, // 23: rmnkmr.lsp.v1.UploadKycDetailsRequest.user_personal_details:type_name -> rmnkmr.lsp.v1.UserPersonalDetails
	16, // 24: rmnkmr.lsp.v1.UploadKycDetailsRequest.user_loan_details:type_name -> rmnkmr.lsp.v1.UserLoanDetails
	17, // 25: rmnkmr.lsp.v1.UploadKycDetailsRequest.user_kyc_details:type_name -> rmnkmr.lsp.v1.UserKycDetails
	8,  // 26: rmnkmr.lsp.v1.GetLoanRequest.metadata:type_name -> rmnkmr.lsp.v1.RequestMetadata
	1,  // 27: rmnkmr.lsp.v1.GetLoanResponse.status:type_name -> rmnkmr.lsp.v1.LoanStatus
	5,  // 28: rmnkmr.lsp.v1.RepaymentAllocation.type:type_name -> rmnkmr.lsp.v1.RepaymentAllocationType
	8,  // 29: rmnkmr.lsp.v1.SaveRepaymentRequest.metadata:type_name -> rmnkmr.lsp.v1.RequestMetadata
	39, // 30: rmnkmr.lsp.v1.SaveRepaymentRequest.allocations:type_name -> rmnkmr.lsp.v1.RepaymentAllocation
	8,  // 31: rmnkmr.lsp.v1.LoanLimitStatusRequest.metadata:type_name -> rmnkmr.lsp.v1.RequestMetadata
	8,  // 32: rmnkmr.lsp.v1.DisbursalLoanRequest.metadata:type_name -> rmnkmr.lsp.v1.RequestMetadata
	16, // 33: rmnkmr.lsp.v1.DisbursalLoanRequest.user_loan_detail:type_name -> rmnkmr.lsp.v1.UserLoanDetails
	15, // 34: rmnkmr.lsp.v1.DisbursalLoanRequest.merchant:type_name -> rmnkmr.lsp.v1.UserPersonalDetails
	30, // 35: rmnkmr.lsp.v1.DisbursalLoanRequest.documents:type_name -> rmnkmr.lsp.v1.Document
	17, // 36: rmnkmr.lsp.v1.DisbursalLoanRequest.user_kyc_detail:type_name -> rmnkmr.lsp.v1.UserKycDetails
	26, // 37: rmnkmr.lsp.v1.DisbursalLoanResponse.result:type_name -> rmnkmr.lsp.v1.StatusResult
	8,  // 38: rmnkmr.lsp.v1.CreateLoanRequest.metadata:type_name -> rmnkmr.lsp.v1.RequestMetadata
	15, // 39: rmnkmr.lsp.v1.CreateLoanRequest.user_personal_details:type_name -> rmnkmr.lsp.v1.UserPersonalDetails
	16, // 40: rmnkmr.lsp.v1.CreateLoanRequest.user_loan_details:type_name -> rmnkmr.lsp.v1.UserLoanDetails
	17, // 41: rmnkmr.lsp.v1.CreateLoanRequest.user_kyc_details:type_name -> rmnkmr.lsp.v1.UserKycDetails
	18, // 42: rmnkmr.lsp.v1.CreateLoanRequest.user_bank_details:type_name -> rmnkmr.lsp.v1.UserBankDetails
	30, // 43: rmnkmr.lsp.v1.CreateLoanRequest.documents:type_name -> rmnkmr.lsp.v1.Document
	48, // 44: rmnkmr.lsp.v1.CreateLoanRequest.repaymentSchedule:type_name -> rmnkmr.lsp.v1.RepaymentSchedule
	55, // 45: rmnkmr.lsp.v1.CreateLoanResponse.rejection_reason:type_name -> rmnkmr.lsp.v1.CreateLoanResponse.RejectionReasonEntry
	8,  // 46: rmnkmr.lsp.v1.PaymentUrlRequest.metadata:type_name -> rmnkmr.lsp.v1.RequestMetadata
	9,  // 47: rmnkmr.lsp.v1.API.LoanProviders:input_type -> rmnkmr.lsp.v1.LoanProvidersRequest
	13, // 48: rmnkmr.lsp.v1.API.InitiateLoan:input_type -> rmnkmr.lsp.v1.InitiateLoanRequest
	28, // 49: rmnkmr.lsp.v1.API.CreateRepaymentSchedule:input_type -> rmnkmr.lsp.v1.CreateRepaymentScheduleRequest
	21, // 50: rmnkmr.lsp.v1.API.CreateLead:input_type -> rmnkmr.lsp.v1.CreateLeadRequest
	31, // 51: rmnkmr.lsp.v1.API.UploadDocuments:input_type -> rmnkmr.lsp.v1.UploadDocumentRequest
	47, // 52: rmnkmr.lsp.v1.API.CreateLoan:input_type -> rmnkmr.lsp.v1.CreateLoanRequest
	35, // 53: rmnkmr.lsp.v1.API.BureauPull:input_type -> rmnkmr.lsp.v1.BureauPullRequest
	37, // 54: rmnkmr.lsp.v1.API.GetLoan:input_type -> rmnkmr.lsp.v1.GetLoanRequest
	40, // 55: rmnkmr.lsp.v1.API.SaveRepayment:input_type -> rmnkmr.lsp.v1.SaveRepaymentRequest
	42, // 56: rmnkmr.lsp.v1.API.CheckLoanLimitStatus:input_type -> rmnkmr.lsp.v1.LoanLimitStatusRequest
	44, // 57: rmnkmr.lsp.v1.API.DisburseLoan:input_type -> rmnkmr.lsp.v1.DisbursalLoanRequest
	23, // 58: rmnkmr.lsp.v1.API.CheckLoanStatus:input_type -> rmnkmr.lsp.v1.CheckLoanStatusRequest
	51, // 59: rmnkmr.lsp.v1.API.PaymentUrl:input_type -> rmnkmr.lsp.v1.PaymentUrlRequest
	32, // 60: rmnkmr.lsp.v1.API.UpdateKycDetails:input_type -> rmnkmr.lsp.v1.UploadKycDetailsRequest
	12, // 61: rmnkmr.lsp.v1.API.LoanProviders:output_type -> rmnkmr.lsp.v1.LoanProvidersResponse
	14, // 62: rmnkmr.lsp.v1.API.InitiateLoan:output_type -> rmnkmr.lsp.v1.InitiateLoanResponse
	46, // 63: rmnkmr.lsp.v1.API.CreateRepaymentSchedule:output_type -> rmnkmr.lsp.v1.CreateRepaymentScheduleResponse
	22, // 64: rmnkmr.lsp.v1.API.CreateLead:output_type -> rmnkmr.lsp.v1.CreateLeadResponse
	34, // 65: rmnkmr.lsp.v1.API.UploadDocuments:output_type -> rmnkmr.lsp.v1.UploadDocumentResponse
	49, // 66: rmnkmr.lsp.v1.API.CreateLoan:output_type -> rmnkmr.lsp.v1.CreateLoanResponse
	36, // 67: rmnkmr.lsp.v1.API.BureauPull:output_type -> rmnkmr.lsp.v1.BureauPullResponse
	38, // 68: rmnkmr.lsp.v1.API.GetLoan:output_type -> rmnkmr.lsp.v1.GetLoanResponse
	41, // 69: rmnkmr.lsp.v1.API.SaveRepayment:output_type -> rmnkmr.lsp.v1.SaveRepaymentResponse
	43, // 70: rmnkmr.lsp.v1.API.CheckLoanLimitStatus:output_type -> rmnkmr.lsp.v1.LoanLimitStatusResponse
	45, // 71: rmnkmr.lsp.v1.API.DisburseLoan:output_type -> rmnkmr.lsp.v1.DisbursalLoanResponse
	24, // 72: rmnkmr.lsp.v1.API.CheckLoanStatus:output_type -> rmnkmr.lsp.v1.CheckLoanStatusResponse
	52, // 73: rmnkmr.lsp.v1.API.PaymentUrl:output_type -> rmnkmr.lsp.v1.PaymentUrlResponse
	33, // 74: rmnkmr.lsp.v1.API.UpdateKycDetails:output_type -> rmnkmr.lsp.v1.UploadKycDetailsResponse
	61, // [61:75] is the sub-list for method output_type
	47, // [47:61] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_proto_lsp_proto_init() }
func file_proto_lsp_proto_init() {
	if File_proto_lsp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_lsp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProvidersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProvidersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitiateLoanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitiateLoanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPersonalDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoanDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserKycDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBankDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Installment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBureauDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLeadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLeadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLoanStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLoanStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResultOfferDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRepaymentScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentScheduleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadKycDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadKycDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BureauPullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BureauPullResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepaymentAllocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRepaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRepaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanLimitStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanLimitStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisbursalLoanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisbursalLoanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRepaymentScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepaymentSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APISuccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lsp_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRepaymentScheduleResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_lsp_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_lsp_proto_goTypes,
		DependencyIndexes: file_proto_lsp_proto_depIdxs,
		EnumInfos:         file_proto_lsp_proto_enumTypes,
		MessageInfos:      file_proto_lsp_proto_msgTypes,
	}.Build()
	File_proto_lsp_proto = out.File
	file_proto_lsp_proto_rawDesc = nil
	file_proto_lsp_proto_goTypes = nil
	file_proto_lsp_proto_depIdxs = nil
}
